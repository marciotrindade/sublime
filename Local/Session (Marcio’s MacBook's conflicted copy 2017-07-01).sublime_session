{
	"folder_history":
	[
		"/Users/marciotrindade/Projects/pipefy/pipefy-importer",
		"/Users/marciotrindade/Projects/pipefy/omniauth-pipefy",
		"/Users/marciotrindade/Projects/pipefy/pipestyle-react",
		"/Users/marciotrindade/Projects/pipefy/pipefy/node_modules/react-pipestyle",
		"/Users/marciotrindade/Dropbox/Sublime Text 3/Packages/User",
		"/Users/marciotrindade/Projects/pipefy/pipeui",
		"/Users/marciotrindade/Projects/personal/my-app",
		"/Users/marciotrindade/Projects/pipefy/pipefy_activities",
		"/Users/marciotrindade/Projects/locaweb/saas/emkt-pmta",
		"/Users/marciotrindade/Projects/locaweb/saas",
		"/Users/marciotrindade/Projects/locaweb/saas/emkt-workers",
		"/Users/marciotrindade/Projects/locaweb/saas/emkt-core",
		"/Users/marciotrindade/Projects/public/gitlab-ce",
		"/Users/marciotrindade/Projects/pipefy/pipestyle",
		"/Users/marciotrindade/Projects/locaweb/saas/backup-de-sites",
		"/Users/marciotrindade/Google Drive/codigos/pipefy",
		"/Users/marciotrindade/Projects/pipefy/graphql-api-doc",
		"/Users/marciotrindade/Projects/pipefy",
		"/Users/marciotrindade/Projects/pipefy/pipefy",
		"/Users/marciotrindade/Projects/codebits/vcamp",
		"/Users/marciotrindade/Projects/personal/example",
		"/Users/marciotrindade/Projects/personal",
		"/Users/marciotrindade/Google Drive/codigos",
		"/Users/marciotrindade/Projects/locaweb/saas/emkt-provisioner",
		"/Users/marciotrindade/Projects/public/test",
		"/Users/marciotrindade/Projects/public/omniauth-pipefy",
		"/Users/marciotrindade/Downloads/recruitment_exercise",
		"/Users/marciotrindade/Projects/locaweb/saas/emkt-web",
		"/Users/marciotrindade/Projects/pipefy/pipefy_salesforce",
		"/Users/marciotrindade/Projects/public/es6.io",
		"/Users/marciotrindade/Projects/personal/ansible/blog_provisioner",
		"/usr/local/var/postgres",
		"/Users/marciotrindade/Projects/pipefy/wordpress-site",
		"/Users/marciotrindade/Projects/pipefy/autopipe",
		"/Users/marciotrindade/Projects/pipefy/quality/all_spark-selenium",
		"/Users/marciotrindade/Projects/pipefy/quality/autobots",
		"/Users/marciotrindade/Projects/pipefy/autobots",
		"/Users/marciotrindade/Projects/pipefy/all_spark-selenium",
		"/Users/marciotrindade/Projects/pipefy/backup",
		"/Users/marciotrindade/Projects/pipefy/all_spark",
		"/Users/marciotrindade/Projects/locaweb/front/banner-api",
		"/Users/marciotrindade/Projects/locaweb/saas/saas_plan_config",
		"/Users/marciotrindade/pipefy/pipefy",
		"/Users/marciotrindade/ansible/blog_provisioner",
		"/Users/marciotrindade/pipefy/pipefy_old",
		"/Users/marciotrindade/pipefy/pipestyle",
		"/Users/marciotrindade/projects/BackgroundMusic",
		"/Users/marciotrindade/codebits/vcamp",
		"/Users/marciotrindade/locaweb/locaweb-backup",
		"/Users/marciotrindade/Google Drive/docs/pipefy",
		"/Users/marciotrindade/pipefy/pipefy-wp-theme",
		"/Users/marciotrindade/sites/test_app",
		"/Users/marciotrindade/Desktop",
		"/Users/marciotrindade/sites/project",
		"/Users/marciotrindade/locaweb/emkt-core",
		"/Users/marciotrindade/codebits/vcamp-servers",
		"/Users/marciotrindade/sites/vcamp-servers",
		"/Users/marciotrindade/sites/inspinia/Static_Full_Version",
		"/Users/marciotrindade/sites/es2015",
		"/Users/marciotrindade/pipefy/app",
		"/Users/marciotrindade/pipefy/pipeui",
		"/Volumes/Time Machine Backups/Backups.backupdb/Trindade MacBook Pro/2015-12-05-061203/Macintosh HD/Users/marciotrindade/locaweb/saas/emkt-web",
		"/Users/marciotrindade/pipefy/old_pipeui",
		"/Users/marciotrindade/Dropbox/Sublime Text 3",
		"/Users/marciotrindade/pipefy/locastyle",
		"/usr/local/etc/nginx",
		"/Users/marciotrindade/Library/Application Support/Sublime Text 3",
		"/Users/marciotrindade/.rvm/gems/ruby-2.3.0/gems/mina-slack-0.1.0",
		"/Users/marciotrindade/sites/alurapic",
		"/Users/marciotrindade/sites/inspinia/SCSS",
		"/Users/marciotrindade/codebits/app-soukdesigner-com",
		"/Users/marciotrindade/sites/icheck",
		"/Users/marciotrindade/sites/my_blog",
		"/Users/marciotrindade/sites/detetive_fatima",
		"/Users/marciotrindade/sites/fatima",
		"/usr/local/Cellar/nginx/1.8.0",
		"/usr/local/opt/nginx",
		"/Users/marciotrindade/sites/ticketee_review",
		"/Users/marciotrindade/ansible/teamspeak",
		"/Users/marciotrindade/.ssh",
		"/Users/marciotrindade/codebits/vcamp-ansible",
		"/Users/marciotrindade/ansible",
		"/Users/marciotrindade/codebits/vcamp/vendor/assets/stylesheets/slick",
		"/Users/marciotrindade/codebits/vcamp/vendor/assets/stylesheets/jsTree",
		"/Users/marciotrindade/codebits/vcamp/vendor/assets/stylesheets/ionRangeSlider",
		"/Users/marciotrindade/codebits/spree_souk_provisioner",
		"/Users/marciotrindade/codebits/spree_soukdesigner_core",
		"/Users/marciotrindade/codebit/spree_soukdesigner_core",
		"/Users/marciotrindade/codebit/app-soukdesigner-com",
		"/Users/marciotrindade/velocity/vcamp",
		"/Users/marciotrindade/Google Drive/codigos/vcamp",
		"/Volumes/time_machine/Backups.backupdb/Trindade MacBook Pro/2015-11-19-002421/Macintosh HD/Users/marciotrindade/locaweb/saas/backup-de-sites",
		"/Users/marciotrindade/locaweb/saas/pabx-provisioner",
		"/Users/marciotrindade/Downloads",
		"/Users/marciotrindade/locaweb/saas/backup-de-sites",
		"/Users/marciotrindade/.rvm/gems/ruby-2.2.2/gems/padrino-core-0.10.7",
		"/Users/marciotrindade/.rvm/gems/ruby-2.2.2/gems/padrino-0.10.7",
		"/Users/marciotrindade/locaweb/saas/webdesk",
		"/Users/marciotrindade/locaweb/frontend/banner-api",
		"/Users/marciotrindade/locaweb/saas/webdesk-product-api",
		"/Users/marciotrindade/locaweb/saas/webdesk-provisioner",
		"/Users/marciotrindade/locaweb/saas/emkt-core",
		"/Users/marciotrindade/locaweb/saas/emkt-web",
		"/Users/marciotrindade/locaweb/qualidade/autobots/bkup",
		"/Users/marciotrindade/locaweb/cfengine/ft_qa_saas_masterfiles",
		"/Users/marciotrindade/locaweb/qualidade/autobots/autobots-paas-hospedagem",
		"/Users/marciotrindade/locaweb/commom/products-plan-config",
		"/Users/marciotrindade/locaweb/qualidade/autobots/all_spark-selenium",
		"/Users/marciotrindade/locaweb/qualidade/autobots/emkt",
		"/Users/marciotrindade/locaweb/cfengine/ft_qa_saas_inputs",
		"/Users/marciotrindade/projects/testapp",
		"/Users/marciotrindade/projects/my_blog",
		"/Users/marciotrindade/locaweb/qualidade/autobots/ea",
		"/Users/marciotrindade/locaweb/saas/saas_plan_config",
		"/Users/marciotrindade/locaweb/commom/apostila"
	],
	"last_version": 3126,
	"last_window_id": 3363,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1035.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"org",
						"org_to"
					],
					[
						"orga",
						"organizations"
					],
					[
						"w",
						"WHERE"
					],
					[
						"oraga",
						"organization"
					],
					[
						"min",
						"minimum_of_users"
					],
					[
						"Sub",
						"subscription"
					],
					[
						"delete",
						"deleted_at"
					],
					[
						"checklis",
						"checklist_item_query"
					],
					[
						"Organi",
						"organization"
					],
					[
						"active",
						"active_subscription"
					],
					[
						"plan",
						"plan_id"
					],
					[
						"organiza",
						"organization_id"
					],
					[
						"sub",
						"subscriptions"
					],
					[
						"ac",
						"active_until"
					],
					[
						"recu",
						"recurly_id"
					],
					[
						"month",
						"month_ago\t(time_range.rb)"
					],
					[
						"find",
						"find_by\t(card.rb)"
					],
					[
						"sta",
						"start_form"
					],
					[
						"with",
						"with_current_user\t(store_from_controller.rb)"
					],
					[
						"confir",
						"confirm_message"
					],
					[
						"phas",
						"phases_history"
					],
					[
						"phase",
						"phase_detail"
					],
					[
						"put",
						"put_update"
					],
					[
						"tra",
						"transaction\t(phase.rb)"
					],
					[
						"pass",
						"password"
					],
					[
						"new",
						"newData"
					],
					[
						"password",
						"password_confirmation\t(UserPasssword.jsx)"
					],
					[
						"_rende",
						"_renderNewPassword"
					],
					[
						"_render",
						"_renderCurrentPassword"
					],
					[
						"class",
						"className"
					],
					[
						"onC",
						"onClick\t(UserPasssword.jsx)"
					],
					[
						"card",
						"card_field_values"
					],
					[
						"first",
						"first_child"
					],
					[
						"repo",
						"repo_id"
					],
					[
						"to_",
						"to_i"
					],
					[
						"field",
						"field_id"
					],
					[
						"servi",
						"service_title"
					],
					[
						"imo",
						"imovel"
					],
					[
						"service",
						"service_title"
					],
					[
						"im",
						"imovel"
					],
					[
						"pa",
						"pattern"
					],
					[
						"vali",
						"validation\t(database_field.rb)"
					],
					[
						"t",
						"type"
					],
					[
						"change",
						"change_organization_card_created"
					],
					[
						"mo",
						"move_card_transaction"
					],
					[
						"any",
						"any_card_created\t(card_mover.rb)"
					],
					[
						"all",
						"allowed_hosts"
					],
					[
						"allow",
						"allowed_hosts\t(pipes_controller.rb)"
					],
					[
						"current",
						"current_organization"
					],
					[
						"bu",
						"button-blue"
					],
					[
						"but",
						"button-blue"
					],
					[
						"is",
						"isOpen"
					],
					[
						"get",
						"getInitialState\t(FilterButton.jsx)"
					],
					[
						"cu",
						"current_organization"
					],
					[
						"before",
						"before_action"
					],
					[
						"drop",
						"dropdown\t(_header.html.erb)"
					],
					[
						"pp-no-",
						"pp-no-after"
					],
					[
						"lala",
						"lala_muito_doido\t(email_processor_spec.rb)"
					],
					[
						"email",
						"email_inbox_name\t(20161219180112_add_email_inbox_name_to_pipe.rb)"
					],
					[
						"befo",
						"before_validation\t(database_table.rb)"
					],
					[
						"con",
						"context\tcontext"
					],
					[
						"car",
						"card_phase_detail"
					],
					[
						"conso",
						"console.log"
					],
					[
						"no",
						"nothing"
					],
					[
						"pipe_re",
						"pipe_realtion"
					],
					[
						"expec",
						"expected_relations"
					],
					[
						"chi",
						"child_id"
					],
					[
						"child",
						"child_id\t(pipes_controller.rb)"
					],
					[
						"pare",
						"parent_id\t(pipes_controller.rb)"
					],
					[
						"ex",
						"expiration_unit"
					],
					[
						"expi",
						"expiration_time_by_unit"
					],
					[
						"organi",
						"organization"
					],
					[
						"create",
						"created_by"
					],
					[
						"cont",
						"context_child"
					],
					[
						"Pipe",
						"PipeRelation\t(pipe.rb)"
					],
					[
						"create_car",
						"create_card_label\t(ConnectedCardChildForm.jsx)"
					],
					[
						"Field",
						"FieldSerializer"
					],
					[
						"draft",
						"draft_phase"
					],
					[
						"created",
						"created_card"
					],
					[
						"nav",
						"nav_right"
					],
					[
						"billi",
						"displays_billing_alert"
					],
					[
						"cl",
						"cl\tConsoleLog"
					],
					[
						"json",
						"jsonApiData"
					],
					[
						"icon",
						"iconName"
					],
					[
						"old",
						"old_pipe"
					],
					[
						"js",
						"jsonApiData"
					],
					[
						"expect",
						"expected_body"
					],
					[
						"data",
						"data_params"
					],
					[
						"ma",
						"maxLength"
					],
					[
						"compo",
						"componentWillUnmount\t(LabelSettingsModal.jsx)"
					],
					[
						"component",
						"componentWillUnmount\t(PipePhaseListModal.jsx)"
					],
					[
						"_loa",
						"_loaded"
					],
					[
						"prevent",
						"preventDefault"
					],
					[
						"preve",
						"preventDefault"
					],
					[
						"block",
						"blockTime"
					],
					[
						"label",
						"label_ids\t(Pipe.jsx)"
					],
					[
						"Ph",
						"Phase\t(Phase_spec.js)"
					],
					[
						"act",
						"activities"
					],
					[
						"toE",
						"toEqual"
					],
					[
						"fun",
						"function"
					],
					[
						"late",
						"lateCardsCount"
					],
					[
						"update",
						"update"
					],
					[
						"on",
						"onLoading"
					],
					[
						"newPhase",
						"newPhaseIds"
					],
					[
						"tm",
						"temporaryName"
					],
					[
						"ne",
						"next_phase"
					],
					[
						"pre",
						"previous_phase"
					],
					[
						"di",
						"direction"
					],
					[
						"si",
						"sign_in"
					],
					[
						"for",
						"forward\t(phases_controller.rb)"
					],
					[
						"docker",
						"docker-data\t(docker-compose.yml)"
					],
					[
						"postgre",
						"postgres\t(database.yml)"
					],
					[
						"pipe",
						"pipe-settings-sidebar"
					],
					[
						"ci",
						"click"
					],
					[
						"short",
						"shortcut\t(Pipe_shortcuts_spec.js)"
					],
					[
						"call",
						"callbacks"
					],
					[
						"add",
						"addListener\t(Pipe.jsx)"
					],
					[
						"wai",
						"wait_for_ajax\t(label_select_spec.rb)"
					],
					[
						"sel",
						"selectedIds"
					],
					[
						"_close",
						"_closeLabelModal"
					],
					[
						"set",
						"setState"
					],
					[
						"pro",
						"propTypes\t(FieldTypeLabelSelect.jsx)"
					],
					[
						"organiztion",
						"organization\t(internal_api.rb)"
					],
					[
						"Pip",
						"Pipes\t(index_presenter.rb)"
					],
					[
						"mod",
						"mod\tmodule .. end"
					],
					[
						"expe",
						"expected_body\t(fields_controller_spec.rb)"
					],
					[
						"expected",
						"expected_response\t(fields_controller_spec.rb)"
					],
					[
						"Phase",
						"PhaseStore"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"List",
							""
						],
						[
							"Rspec",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							"Clean"
						]
					],
					[
						"Rspec",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "ruby",
				"selected_items":
				[
					[
						"ruby",
						"Set Syntax: Ruby on Rails"
					],
					[
						"json",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"sql",
						"SQL Beautifier: Format Current SQL File"
					],
					[
						"mark",
						"Set Syntax: Markdown GFM"
					],
					[
						"csv",
						"CSV: Justify columns"
					],
					[
						"josn",
						"Set Syntax: JSON"
					],
					[
						"ma",
						"Set Syntax: Markdown GFM"
					],
					[
						"uniq",
						"Permute Lines: Unique"
					],
					[
						"title",
						"Convert Case: Title Case"
					],
					[
						"tit",
						"Convert Case: Title Case"
					],
					[
						"rubocop",
						"RuboCop: Check current file"
					],
					[
						"rubo",
						"RuboCop: Check current file"
					],
					[
						"rubop",
						"RuboCop: Check current project"
					],
					[
						"reanme",
						"File: Rename"
					],
					[
						"duplica",
						"File: Duplicate"
					],
					[
						"rename",
						"File: Rename"
					],
					[
						"copy",
						"File: Copy Path From Project"
					],
					[
						"dupl",
						"File: Duplicate"
					],
					[
						"ru",
						"RuboCop: Check current file"
					],
					[
						"move",
						"File: Move"
					],
					[
						"gitblame",
						"Git: Blame"
					],
					[
						"java",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"html",
						"Set Syntax: HTML"
					],
					[
						"rudo",
						"RuboCop: Check folder of current file"
					],
					[
						"blame",
						"Git: Blame"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"list",
						"Package Control: List Packages"
					],
					[
						"cop",
						"File: Copy Name Encoded"
					],
					[
						"gitstatus",
						"Git: Status"
					],
					[
						"gi",
						"Git: Status"
					],
					[
						"dupli",
						"File: Duplicate"
					],
					[
						"gitblam",
						"Git: Blame"
					],
					[
						"gitst",
						"Git: Status"
					],
					[
						"upp",
						"Convert Case: Upper Case"
					],
					[
						"git bla",
						"Git: Blame"
					],
					[
						"uni",
						"Permute Lines: Unique"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"gits",
						"Git: Status"
					],
					[
						"case",
						"Convert Case: Lower Case"
					],
					[
						"unqi",
						"Permute Lines: Unique"
					],
					[
						"up",
						"Convert Case: Upper Case"
					],
					[
						"table ma",
						"Table Editor: Set table syntax 'MultiMarkdown' for current view"
					],
					[
						"un",
						"Permute Lines: Unique"
					],
					[
						"git",
						"Git: Status"
					],
					[
						"dele",
						"File: Delete"
					],
					[
						"css",
						"Set Syntax: CSS"
					],
					[
						"duplicate",
						"File: Duplicate"
					],
					[
						"delte",
						"File: Delete"
					],
					[
						"delete",
						"File: Delete"
					],
					[
						"rudy",
						"RuboCop: Check folder of current file (only with lint cops)"
					],
					[
						"mov",
						"File: Move"
					],
					[
						"copypath",
						"File: Copy Path From Project"
					],
					[
						"git bl",
						"Git: Blame"
					],
					[
						"rena",
						"File: Rename"
					],
					[
						"cope",
						"File: Copy Name Encoded"
					],
					[
						"mar",
						"Set Syntax: Markdown GFM"
					],
					[
						"babel",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"eslint",
						"ESLint"
					],
					[
						"esli",
						"ESLint"
					],
					[
						"blam",
						"Git: Blame"
					],
					[
						"csv sort",
						"CSV: Sort by column (Ascending)"
					],
					[
						"markd",
						"Set Syntax: Markdown"
					],
					[
						"gitsta",
						"Git: Status"
					],
					[
						"rei",
						"Indentation: Reindent Lines"
					],
					[
						"babe",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"bla",
						"Git: Blame"
					],
					[
						"dup",
						"File: Duplicate"
					],
					[
						"yml",
						"Set Syntax: YAML"
					],
					[
						"ever new",
						"Evernote: New empty note"
					],
					[
						"javas",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"bab",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"block",
						"Toggle Block Comment"
					],
					[
						"push",
						"Git: Push"
					],
					[
						"git st",
						"Git: Status"
					],
					[
						"select",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"erb",
						"Coffee: Quick Run Bar"
					],
					[
						"slim",
						"Set Syntax: Ruby Slim"
					],
					[
						"jslin",
						"JSLint"
					],
					[
						"inserc",
						"CSV: Insert column"
					],
					[
						"",
						"CSV: Insert column"
					],
					[
						"blma",
						"Git: Blame"
					],
					[
						"blmae",
						"Git: Blame"
					],
					[
						"jso",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"javasc",
						"Set Syntax: JavaScript"
					],
					[
						"y",
						"Set Syntax: YAML"
					],
					[
						"de",
						"File: Delete"
					],
					[
						"mo",
						"File: Move"
					],
					[
						"coffes",
						"Set Syntax: CoffeeScript"
					],
					[
						"js",
						"Set Syntax: JavaScript"
					],
					[
						"rspec",
						"Set Syntax: Better RSpec"
					],
					[
						"them",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"du",
						"File: Duplicate"
					],
					[
						"git diff",
						"Git: Diff Current File"
					],
					[
						"gitdif",
						"Git: Diff All Files"
					],
					[
						"ja",
						"Set Syntax: JavaScript"
					],
					[
						"javascript",
						"Set Syntax: JavaScript"
					],
					[
						"rename\t",
						"File: Rename"
					],
					[
						"ren",
						"File: Rename"
					],
					[
						"jsx",
						"Set Syntax: JSX"
					],
					[
						"path",
						"File: Copy Path"
					],
					[
						"hash",
						"Convert Hashes"
					],
					[
						"dash",
						"DashDoc: invoke Dash with selected word"
					],
					[
						"duplic",
						"File: Duplicate"
					],
					[
						"gitbla",
						"Git: Blame"
					],
					[
						"gitb",
						"Git: Blame"
					],
					[
						"ruboc",
						"RuboCop: Check current file"
					],
					[
						"git:",
						"Git: Blame"
					],
					[
						"ranem",
						"ColorSchemeSelector: Random Color Scheme"
					],
					[
						"forma",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"form",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"fo",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"for",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"search",
						"Search In Project"
					],
					[
						"theme",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"jsonl",
						"Pretty JSON: Validate"
					],
					[
						"rails partia",
						"Snippet: insert a rails view password_field_tag helper"
					],
					[
						"plain",
						"Set Syntax: Plain Text"
					],
					[
						"color",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"tex",
						"Set Syntax: Plain Text"
					],
					[
						"title ",
						"Convert Case: Title Case"
					],
					[
						"upper",
						"Convert Case: Upper Case"
					],
					[
						"todo",
						"SimpleTODO: List TODO"
					],
					[
						"MO",
						"File: Move"
					],
					[
						"renam",
						"File: Rename"
					],
					[
						"renm",
						"File: Rename"
					]
				],
				"width": 588.0
			},
			"console":
			{
				"height": 752.0,
				"history":
				[
					"help",
					"reload"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/marciotrindade/Google Drive/codigos/pipefy/convert_users_to_admin.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/create_subscription.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/move_pipe.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/accenture/import/distrato.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/restore_phase.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/users_with_roles.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/accenture/import/ecoproject.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/destroyer/phase_destroyer_spec.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/add_user_to_pipe.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/move_pipefy.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/fix_card_with_worng_value.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/accenture/import/update_91937.rb",
				"/Users/marciotrindade/Downloads/pipefy.csv",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/subscriptions.rb",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/subscriptions_duplicated.sql",
				"/Users/marciotrindade/.ssh/config",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.ssh/config",
				"/Users/marciotrindade/Downloads/accenture.csv",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/subscription.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/card_spec.rb",
				"/Users/marciotrindade/Downloads/pipefy/users.csv",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/fix_phase_destroyer_by_card.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.git/COMMIT_EDITMSG",
				"/Users/marciotrindade/Google Drive/codigos/pipefy/log/21287.log",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/graphql/mutations/phases/create_phase_gql_mutation_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/types/mutation_gql_type.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/mutations/comments/create_comment_gql_mutation.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/comments/create.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/graphql/mutations/create_comment_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/cards.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/graphql/mutations/add_comment_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/mutations/phases/create_phase_gql_mutation.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/pipe/phases/PhaseHeader.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/locales/en.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/pipe.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/abilities/pipe_roles.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/abilities/pipe_roles_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/my_desk_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/resource_provider/my_desk.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/period/date_range.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/period/time_range.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/report_filter_query_builder.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/report_filter_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/settings/user_settings_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/period/date_range_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/period/time_range_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/view_objects/metrics_view_object.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/report_filter_query_builder_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/report_filter.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/field.rb",
				"/Users/marciotrindade/.rvm/gems/ruby-2.4.1/gems/searchkick-1.5.1/lib/searchkick/logging.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/factories/card_phase_detail_factory.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/factories/card_field_value_factory.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/period_range.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/pipes.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/card_field_value_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/factories/fields_factory.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/card_phase_details.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/phases.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/notifications_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/resource_provider/notifications.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/resource_provider/card_relationships_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.travis.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Gemfile",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.git/MERGE_MSG",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/rails_helper.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/rails_helper.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/show_field_help_text_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/bin/run-tests.sh",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/organization/org_dashboard_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/javascripts/views/closed_card/ClosedCard_dates_spec.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/javascripts/views/modals/StartFormSettingsModal_spec.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/node_modules/dropzone/test.sh",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe_settings/fields_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe_settings/general_settings_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/tabs/email_templates_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/database/permission_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/settings/pipe_general_settings_modal_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/spec_helper.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/open_card/start_form_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/settings/label_settings_modal_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/support/features/pipe.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/members_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe_settings/email_templates_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.rspec",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/onboarding/template_store_flow_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/support/features/onboarding.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/onboarding/normal_flow_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/onboarding/invite_accepting_flow_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/create_new_card_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/environments/test.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_api/activity_loader.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/database_record.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_api/api.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_api/org_loader.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/card_field_values_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card_field_value.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/pipes_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/cards_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/card_mover.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_publisher.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/initializers/multi_tenant.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/lib/multi_tenant/store_from_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/workers/create_notification_worker.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/only_assignee_can_edit_card_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/database/fields_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe_settings/automated_message_setup_settings_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/current_phase_field_types/connector_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/reports_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/pipe_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/guest_user_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/database/tables_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/database/records_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/settings/change_password_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/phase_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/support/shared_examples/edit_field_type_in_a_modal.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/edit_field_modals/editing_every_field_type_in_modals_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/edit_phase_name_in_place_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/bin/locales",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/modals/settings/PhaseListItem.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/mixins/SwalMixin.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/pipe/settings_sidebar_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/modals/settings/GeneralSettingsModal.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/PipeSwal.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/pipe/PipeSettingsSidebar.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts/PipeSwal.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/database/tables/_database_table.html.erb"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 98.0,
				"where_history":
				[
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec/javascripts",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src",
					"",
					"react_components/",
					"spec_features/",
					"spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/views",
					"",
					"react_components/src/",
					"spec_features/",
					"react_components/",
					"spec/javascritps/",
					"react_components/",
					"react_components",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/stylesheets/v3",
					"/Users/marciotrindade/Projects/pipefy/pipefy/config/locales",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/db",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/pipefy/pipefy/db",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/models/abilities",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features/features",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/views/database",
					"/Users/marciotrindade/pipefy/pipefy/app/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3",
					"/Users/marciotrindade/pipefy/pipefy/spec/javascripts",
					"",
					"/Users/marciotrindade/pipefy/pipefy/react_components",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3/components/stores",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features/features",
					"/Users/marciotrindade/pipefy/pipefy/spec/features",
					"",
					"/Users/marciotrindade/codebits/vcamp/app/views/admin",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3",
					"/Users/marciotrindade/pipefy/pipefy/app/assets",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascript",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/stylesheets",
					"/Users/marciotrindade/pipefy/pipefy",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec",
					"",
					"render ",
					"",
					"/Users/marciotrindade/locaweb/saas/backup-de-sites/app/views/servers",
					"",
					"/Users/marciotrindade/locaweb/emkt-core/spec_truncation",
					"/Users/marciotrindade/locaweb/emkt-core/spec",
					"",
					"/Users/marciotrindade/locaweb/emkt-workers/app",
					"",
					"/Users/marciotrindade/locaweb/emailmarketing/config/locales",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"\",\"",
					"},{",
					", ",
					"select count(*) from",
					"Resolvers::CardFields::Update.new",
					"47663",
					"  ",
					", ",
					"each(&:restore)",
					"cache",
					"          - AutomatedMessage#\n",
					"          - ChecklistDestroyer\n            - ChecklistItemDestroyer\n              - Notifications_delete_all\n",
					"          - CommentDestroyer\n            - Notifications_delete_all\n",
					"        - CommentDestroyer\n          - Notifications_delete_all\n",
					"        - ChecklistDestroyer\n          - ChecklistItemDestroyer\n            - Notifications_delete_all\n",
					"FieldDestroyer",
					"Label",
					"label",
					"Min",
					"min",
					"org_user",
					"\\n",
					"admin",
					"\n  ",
					"pipe",
					"phase",
					"addPhase",
					"AddPhaseGQLMutation",
					" && ",
					".to_date",
					"Date",
					"current_time",
					"handle_period_filter",
					"a_month_ago",
					"month",
					"end_of_month",
					"current_month",
					"current_time",
					"\", \"",
					"pipe_metrics_query",
					"previous_period",
					"PeriodRange",
					"handle_period_filter",
					"PeriodRange",
					"search",
					"create(:card_field_value",
					"phase_detail",
					"with",
					"create(:field",
					"rspec",
					"Share Start Form",
					"tooltip holds the long version",
					"ClosedCard Dates card age tooltip holds the long version",
					"Delete Field",
					",",
					".",
					"Connection Name",
					"Connected Pipe",
					".rb",
					"Share Start Form",
					"Delete Label",
					"Delete Pipe",
					"def select_open_card_tab",
					"select_open_card_tab",
					"Table Member",
					"publish",
					"send_create_notifications",
					"creating",
					"send_create_notifications",
					"validate_and_move",
					"user",
					"manage_card",
					"Record",
					"View Records",
					"_renderSwalWarning",
					"PipeSwal",
					"PipeSwall",
					", ",
					" input[type=text]",
					" # ",
					".rb",
					"pp-ico",
					"label",
					"_html",
					"confirmKey",
					"confirmLabel",
					"confirmationKey",
					"confirmLabel",
					"confirmText",
					"confirmLabel",
					"confirmLabelconfirmLabelconfirmLabelconfirmLabelconfirmLabel",
					"confirmKey",
					"SwalMixin",
					"_renderSwalWarning",
					"ips_blacklist",
					"success",
					"primecookie",
					"marcio",
					"'",
					"application",
					"<",
					"\"",
					"time",
					"input",
					"api.documentation.",
					"phase_detail",
					"label",
					"draft",
					"18",
					"calculate_and_persist_update_at_considering_associations",
					"update_card",
					"do_upsert",
					"CardUpdatedAtRedisSynchronizer",
					"input_ids",
					"pipe_void",
					"deletePhase",
					"card",
					"')",
					"\"",
					"\n    ",
					"<<",
					"graphql",
					"Database",
					"swal",
					"./",
					".rb",
					"a field type managed in a modal",
					"eq"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"$2",
					".pp-header .pp-nav-center",
					"$1: ",
					"require_relative '../",
					"",
					"$3",
					"\\n",
					" ",
					"to have_no",
					":card_title=>\"\"",
					"\"card_title\"=>\"\"",
					"staging-www",
					"if (",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $3 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $ AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $3 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $1 AND card_phase_detail_id = $2 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"require 'features_helper'",
					"$2 - $1",
					"users(:pipe_org_admin)",
					"pending",
					"$2",
					"render ",
					":$1",
					"product_properties_check('$1', $2, dynamic: true)",
					"product_properties_radio('$1', $2, default: true)",
					"product_properties_check('$1', $2, default: true)",
					"$1",
					"{{ server_hostname }}",
					"current_site",
					"ApiClient",
					"",
					"set_flash",
					"$3",
					"$1;",
					"$2",
					"",
					", ",
					"{account_id: $1, message_id: $2, batch: $3},",
					"",
					"$2,$1,hm8307\\n",
					"$2,$1,hm8307",
					"{account_id: $1, message_id: $2},",
					"$2,$1,hm1720\\n",
					"$2,$1,hm950\\n",
					"$2,$1,hm950",
					"$2,$1,hm638",
					"\\n",
					"\"",
					"\"\\n\"",
					"'\\n'",
					"$1",
					"\\n",
					"be_falsey",
					"be_truthy",
					"be_falsey",
					"be_truthy",
					"ls-label",
					"ls-label-text",
					"{\"$3\" => \"$1\"},",
					"{\"$3}\" => \"$1\"},",
					"\\n",
					"",
					"\\n",
					"",
					"\\n",
					"",
					"$1, $3, $5",
					"Host.find_by_ip(\"$2\").update_attribute(:name, \"$3\")",
					"$2,$3,$1",
					",\\n",
					"$1",
					",\\n",
					",",
					",\\n",
					"$2",
					"",
					"\\n",
					"",
					"\"$1\",",
					"$1",
					"\",\\n\"",
					",\\n",
					"$1"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 31.0
			},
			"input":
			{
				"height": 38.0
			},
			"menu_visible": true,
			"output.9o:///Users/marciotrindade/locaweb/emkt-bounces/app/workers":
			{
				"height": 112.0
			},
			"output.9o:///Users/marciotrindade/locaweb/emkt-provisioner/spec/lib":
			{
				"height": 112.0
			},
			"output.GoSublime-output":
			{
				"height": 100.0
			},
			"output.MarGo-output":
			{
				"height": 100.0
			},
			"output.doc":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 406.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git-commit":
			{
				"height": 132.0
			},
			"output.git-push":
			{
				"height": 132.0
			},
			"pinned_build_system": "Packages/User/Bash.sublime-build",
			"replace":
			{
				"height": 58.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"convert",
						"convert_users_to_admin.rb"
					],
					[
						"create",
						"create_subscription.rb"
					],
					[
						"mo",
						"move_pipe.rb"
					],
					[
						"restore",
						"restore_phase.rb"
					],
					[
						"move",
						"move_pipe.rb"
					],
					[
						"cardsyml",
						"spec/fixtures/cards.yml"
					],
					[
						"enyml",
						"config/locales/en.yml"
					],
					[
						"pipe",
						"app/models/pipe.rb"
					],
					[
						"piperoles",
						"app/models/abilities/pipe_roles.rb"
					],
					[
						"mydesk",
						"app/services/resource_provider/my_desk.rb"
					],
					[
						"field",
						"app/models/field.rb"
					],
					[
						"fiel",
						"app/models/field.rb"
					],
					[
						"card",
						"app/models/card.rb"
					],
					[
						"cardphasedetailfac",
						"spec/factories/card_phase_detail_factory.rb"
					],
					[
						"cardphasedetail",
						"spec/fixtures/card_phase_details.yml"
					],
					[
						"phasedetailfac",
						"spec/factories/card_phase_detail_factory.rb"
					],
					[
						"cardfieldvaluefactor",
						"spec/factories/card_field_value_factory.rb"
					],
					[
						"fieldfactory",
						"spec/factories/fields_factory.rb"
					],
					[
						"phases",
						"spec/fixtures/phases.yml"
					],
					[
						"pipesyml",
						"spec/fixtures/pipes.yml"
					],
					[
						"reportfilterspec",
						"spec/services/report_filter_spec.rb"
					],
					[
						"periodrange",
						"app/models/period_range.rb"
					],
					[
						"reportfilterquerybuilder",
						"app/services/report_filter_query_builder.rb"
					],
					[
						"reportfilter",
						"app/services/report_filter.rb"
					],
					[
						"notifications",
						"app/services/resource_provider/notifications.rb"
					],
					[
						"notificationscontroler",
						"app/controllers/notifications_controller.rb"
					],
					[
						"travis",
						".travis.yml"
					],
					[
						"gem",
						"Gemfile"
					],
					[
						"gemfile",
						"Gemfile"
					],
					[
						"railshel",
						"spec_features/rails_helper.rb"
					],
					[
						"railshelper",
						"spec/rails_helper.rb"
					],
					[
						"spec_features/open_card/show_field_help_text_spec.rb",
						"spec_features/open_card/show_field_help_text_spec.rb"
					],
					[
						"test.sh",
						"node_modules/dropzone/test.sh"
					],
					[
						"spec",
						"spec/spec_helper.rb"
					],
					[
						".rspec",
						".rspec"
					],
					[
						"testsh",
						"bin/run-tests.sh"
					],
					[
						"testrb",
						"config/environments/test.rb"
					],
					[
						"store_from_controller",
						"lib/multi_tenant/store_from_controller.rb"
					],
					[
						"multitenant",
						"config/initializers/multi_tenant.rb"
					],
					[
						"activitypublisher",
						"app/services/activity_publisher.rb"
					],
					[
						"cardmover",
						"app/services/card_mover.rb"
					],
					[
						"cardscontroller",
						"app/controllers/cards_controller.rb"
					],
					[
						"pipescontroller",
						"app/controllers/pipes_controller.rb"
					],
					[
						"fieldvalue",
						"app/models/card_field_value.rb"
					],
					[
						"database_record",
						"app/models/database_record.rb"
					],
					[
						"api",
						"app/services/activity_api/api.rb"
					],
					[
						"activityloader",
						"app/services/activity_api/activity_loader.rb"
					],
					[
						"orgloader",
						"app/services/activity_api/org_loader.rb"
					],
					[
						"fieldvaluerb",
						"app/models/card_field_value.rb"
					],
					[
						"cardfielvaluecontroller",
						"app/controllers/card_field_values_controller.rb"
					],
					[
						"run-tests.sh",
						"bin/run-tests.sh"
					],
					[
						"bin/locales",
						"bin/locales"
					],
					[
						"sidebar",
						"react_components/src/views/pipe/PipeSettingsSidebar.jsx"
					],
					[
						"locales",
						"bin/locales"
					],
					[
						"pipeswal",
						"react_components/src/views/PipeSwal.jsx"
					],
					[
						"swalmixin",
						"react_components/src/views/mixins/SwalMixin.jsx"
					],
					[
						"views/database/tables/_database_table.html.erb",
						"app/views/database/tables/_database_table.html.erb"
					],
					[
						"views/pipe_settings/phases/edit.html.erb",
						"app/views/pipe_settings/phases/edit.html.erb"
					],
					[
						"views/pipe_settings/pipes/edit.html.erb",
						"app/views/pipe_settings/pipes/edit.html.erb"
					],
					[
						"views/organizations/_pipe.html.erb",
						"app/views/organizations/_pipe.html.erb"
					],
					[
						"organizationedit",
						"app/views/organizations/edit.html.erb"
					],
					[
						"shared/swal_warning",
						"app/views/shared/_swal_warning.html.erb"
					],
					[
						"useredithtml",
						"app/views/users/edit.html.erb"
					],
					[
						"rack",
						"config/initializers/rack-attack.rb"
					],
					[
						"routes",
						"config/routes.rb"
					],
					[
						"database",
						"config/database.yml"
					],
					[
						"structure",
						"db/structure.sql"
					],
					[
						"bin/locale",
						"bin/locales"
					],
					[
						"fryml",
						"config/locales/fr.yml"
					],
					[
						"card_phase",
						"app/models/card_phase_detail.rb"
					],
					[
						"phasedetailgqltype",
						"app/graphql/types/phase_detail_gql_type.rb"
					],
					[
						"phases.yml",
						"spec/fixtures/phases.yml"
					],
					[
						"cardvaluechangehandler",
						"app/services/card_value_change_handler.rb"
					],
					[
						"cardfieldvalueupdater",
						"app/services/card_field_value_updater.rb"
					],
					[
						"cardupdatedatredissynchronizer",
						"app/models/concerns/card_updated_at_redis_synchronizer.rb"
					],
					[
						"pipes",
						"spec/fixtures/pipes.yml"
					],
					[
						"piperb",
						"app/models/pipe.rb"
					],
					[
						"spechelper",
						"spec/spec_helper.rb"
					],
					[
						"app",
						"app.json"
					],
					[
						"gemfile.lock",
						"Gemfile.lock"
					],
					[
						"rubocop",
						".rubocop.yml"
					],
					[
						"spec_features/features/database/tables_spec.rb",
						"spec_features/features/database/tables_spec.rb"
					],
					[
						"spec_features/features/database/permission_spec.rb",
						"spec_features/features/database/permission_spec.rb"
					],
					[
						"spec_features/features/new_database/tables_spec.rb",
						"spec_features/features/new_database/tables_spec.rb"
					],
					[
						"en.yml",
						"config/locales/en.yml"
					],
					[
						"en-ym",
						"config/locales/en-US.yml"
					],
					[
						"organizationrb",
						"app/models/organization.rb"
					],
					[
						"recurly",
						"app/models/recurly_plan.rb"
					],
					[
						"en-us",
						"config/locales/en-US.yml"
					],
					[
						"swal",
						"app/views/shared/_swal_default.html.erb"
					],
					[
						"_membe",
						"app/views/organizations/_member.html.erb"
					],
					[
						"db/migrate/20170317130904_add_not_null_to_fields.rb",
						"db/migrate/20170317130904_add_not_null_to_fields.rb"
					],
					[
						"intercomhtmle",
						"app/views/shared/_intercom.html.erb"
					],
					[
						"organization",
						"spec/fixtures/organizations.yml"
					],
					[
						"intercom",
						"config/initializers/intercom.rb"
					],
					[
						"applicationcontro",
						"app/controllers/application_controller.rb"
					],
					[
						"pipescontrolelr",
						"app/controllers/pipes_controller.rb"
					],
					[
						"app/models/field.rb",
						"app/models/field.rb"
					],
					[
						"pipeclone",
						"spec_features/features/pipe_clone_spec.rb"
					],
					[
						"pipeimporter",
						"app/models/pipe_importer.rb"
					],
					[
						"repocloner",
						"app/models/repo_cloner.rb"
					],
					[
						"_pipedrop.scss",
						"app/assets/stylesheets/v3/pipeui/components/_pipedrop.scss"
					],
					[
						"organizationscontroller",
						"app/controllers/organizations_controller.rb"
					],
					[
						"orgni",
						"app/models/organization.rb"
					],
					[
						"pipe_member",
						"app/views/pipes/_member.html.erb"
					],
					[
						"phaserb",
						"app/models/phase.rb"
					],
					[
						"cardfieldvaluemassupdater",
						"app/services/card_field_value_mass_updater.rb"
					],
					[
						"cardvaluechangenotifyworker",
						"app/workers/card_value_change_notify_worker.rb"
					],
					[
						"cardvaluechangeworker",
						"app/workers/card_value_change_worker.rb"
					],
					[
						"fielvalueupdater",
						"app/services/card_field_value_updater.rb"
					],
					[
						"notificator",
						"app/services/notificator.rb"
					],
					[
						"carduipresenter",
						"app/presenters/card_ui_presenter.rb"
					],
					[
						"phase",
						"app/models/phase.rb"
					],
					[
						"app/workers/reindex_phases_cards_worker.rb",
						"app/workers/reindex_phases_cards_worker.rb"
					],
					[
						"cards.yml",
						"spec/fixtures/cards.yml"
					],
					[
						"card.rb",
						"app/models/card.rb"
					],
					[
						"cardrb",
						"react_components/src/views/open_card/tabs/OpenCardRelationsTab.jsx"
					],
					[
						"phasescontrolelr",
						"app/controllers/internal_api/phases_controller.rb"
					],
					[
						"phasescontroller",
						"app/controllers/pipe_settings/phases_controller.rb"
					],
					[
						"labelrb",
						"app/models/label.rb"
					],
					[
						"labe",
						"app/controllers/pipe_settings/labels_controller.rb"
					],
					[
						"labelscontroller",
						"app/controllers/pipe_settings/labels_controller.rb"
					],
					[
						"fieldvalueupdater",
						"app/services/card_field_value_updater.rb"
					],
					[
						"organiza",
						"app/models/organization.rb"
					],
					[
						"user",
						"app/models/user.rb"
					],
					[
						"public_formhtml",
						"app/views/pipes/public_form.html.erb"
					],
					[
						"deve",
						"config/environments/development.rb"
					],
					[
						"naza",
						"config/initializers/nazar.rb"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"~/Dropbox/sublime_projects/codigos.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 354.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"2.1",
						"$(TIMESTAMP_DIR)/.RUBYARCHDIR.-.hitimes.-.2.1.time:"
					]
				],
				"width": 374.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 293.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1920.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"pip",
						"pipe"
					],
					[
						"pipe",
						"pipe_id"
					],
					[
						"phas",
						"phases"
					],
					[
						"with",
						"with_deleted"
					],
					[
						"acti",
						"active_subscription\t(organization.rb)"
					],
					[
						"sub",
						"subscription\t(billing_spec.rb)"
					],
					[
						"display",
						"display_name\t(card_mover.rb)"
					],
					[
						"attr",
						"attr_reader\t(notifier.rb)"
					],
					[
						"Prop",
						"PropTypes.string"
					],
					[
						"footer",
						"footerOnClick\t(Popup.jsx)"
					],
					[
						"Pro",
						"PropTypes.string"
					],
					[
						"card",
						"card_ids"
					],
					[
						"Repo",
						"RepoSummarizedLayoutAttribute\t(field.rb)"
					],
					[
						"destroy",
						"destroys"
					],
					[
						"delete",
						"deleted_at\t(phase_destroyer.rb)"
					],
					[
						"Phase",
						"PhaseDetail\t(phase_destroyer.rb)"
					],
					[
						"automate",
						"automated_message_setup"
					],
					[
						"phase",
						"phase_details"
					],
					[
						"con",
						"context\tcontext"
					],
					[
						"attri",
						"attribute_slug\t(field.rb)"
					],
					[
						"A",
						"AutomatedMessageSetup\t(automated_message_setup.rb)"
					],
					[
						"find",
						"find_by"
					],
					[
						"pp-no",
						"pp-no-margin"
					],
					[
						"fu",
						"function"
					],
					[
						"min",
						"min_users"
					],
					[
						"active",
						"active_subscription"
					],
					[
						"su",
						"subscriptions"
					],
					[
						"mini",
						"minimal_view"
					],
					[
						"toggle",
						"toggleEmbedCode"
					],
					[
						"class",
						"className"
					],
					[
						"preve",
						"preventDefault\t(SettingsSidebar.jsx)"
					],
					[
						"clas",
						"className"
					],
					[
						"canM",
						"canManageTable"
					],
					[
						"canMa",
						"canManage"
					],
					[
						"pp",
						"pp-active\t(SettingsSidebar.jsx)"
					],
					[
						"can",
						"can_manage_record\t(TableQuery.gql)"
					],
					[
						"defa",
						"defaultProps\t(SettingsSidebar.jsx)"
					],
					[
						"cons",
						"constructor\t(SettingsSidebar.jsx)"
					],
					[
						"boo",
						"boolean"
					],
					[
						"bind",
						"bindKeys"
					],
					[
						"constru",
						"constructor\tReact.Component"
					],
					[
						"org_",
						"org_preferences"
					],
					[
						"public_form",
						"public_form_enterprise\t(public_form.html.erb)"
					],
					[
						"org_prefe",
						"org_preference\t(active_org_preference.rb)"
					],
					[
						"authoriza",
						"authorization\t(table_roles.rb)"
					],
					[
						"nes",
						"nextProps"
					],
					[
						"componentWill",
						"componentWillUpdate\t Life Cycle"
					],
					[
						"table",
						"tableField"
					],
					[
						"minim",
						"minimal_view\t(Preview.js)"
					],
					[
						"autho",
						"authorization\t(table_roles.rb)"
					],
					[
						"Card",
						"CardAssignee"
					],
					[
						"email",
						"email_templates\t(pipe_destroyer.rb)"
					],
					[
						"Automa",
						"AutomatedMessageSetup"
					],
					[
						"comm",
						"comments_count"
					],
					[
						"pp-d",
						"pp-display-block"
					],
					[
						"pp-inpu",
						"pp-input-wrap"
					],
					[
						"acce",
						"accept\t(dropzone.js)"
					],
					[
						"compo",
						"componentDidMount"
					],
					[
						"atta",
						"attachment\t(FieldTypeAttachment.jsx)"
					],
					[
						"custom",
						"custom_validation\t(FieldTypeAttachment.jsx)"
					],
					[
						"tas",
						"tas\ttask :task_name => [:dependent, :tasks] do .. end"
					],
					[
						"constr",
						"constructor\tReact.Component"
					],
					[
						"hadle",
						"handleClose"
					],
					[
						"dis",
						"dispatch"
					],
					[
						"default",
						"defaultProp"
					],
					[
						"field",
						"fieldId"
					],
					[
						"change",
						"changeLabelSettingsFormVisibility\t(selectField.js)"
					],
					[
						"map",
						"mapDispatchToProps"
					],
					[
						"di",
						"dispatch\t(AssigneeSelectField.jsx)"
					],
					[
						"Invite",
						"InviteMembersModal"
					],
					[
						"Table",
						"TablesQuery\t(TableQuery.gql)"
					],
					[
						"create",
						"createElement()\tReact"
					],
					[
						"i18n",
						"i18nScope"
					],
					[
						"pp-",
						"pp-description"
					],
					[
						"is",
						"isRequired"
					],
					[
						"pro",
						"propTypes\t(Fields.jsx)"
					],
					[
						"defau",
						"defaultProps\t(Index.jsx)"
					],
					[
						"defaul",
						"defaultProps\t(Radio.jsx)"
					],
					[
						"lab",
						"labelClasses"
					],
					[
						"member",
						"member_role"
					],
					[
						"error",
						"error_message"
					],
					[
						"mem",
						"member_role"
					],
					[
						"subj",
						"subject"
					],
					[
						"new",
						"new_org"
					],
					[
						"orga",
						"organization"
					],
					[
						"organi",
						"organizations"
					],
					[
						"card_",
						"card_assignee.create\t(card_assignee.rb)"
					],
					[
						"current",
						"current_table"
					],
					[
						"has",
						"has_role\t(repo.rb)"
					],
					[
						"to_",
						"to_i"
					],
					[
						"organiza",
						"organizations"
					],
					[
						"cas",
						"cascade"
					],
					[
						"col",
						"column"
					],
					[
						"two",
						"two_factor.login.description"
					],
					[
						"in",
						"inpuCode"
					],
					[
						"next",
						"nextValue"
					],
					[
						"card_phase",
						"card_phase_details\t(organization.rb)"
					],
					[
						"au",
						"automated_message_setup"
					],
					[
						"automa",
						"automated_message"
					],
					[
						"disable",
						"disabled"
					],
					[
						"ex",
						"exec_context"
					],
					[
						"html",
						"html_classes"
					],
					[
						"clic",
						"click_link\t(login_spec.rb)"
					],
					[
						"login",
						"login_path\t(login_spec.rb)"
					],
					[
						"click",
						"click_link"
					],
					[
						"tokens",
						"tokens_path\t(new.html.erb)"
					],
					[
						"no-",
						"no-margin-bottom"
					],
					[
						"cla",
						"cla\tclass .. end"
					],
					[
						"update",
						"update_attributes\t(users_controller.rb)"
					],
					[
						"web",
						"webhook"
					],
					[
						"render",
						"renderWebhooks\t(IntegrationsModal.jsx)"
					],
					[
						"Web",
						"Webhook"
					],
					[
						"notify",
						"notify_error\t(record_worker.rb)"
					],
					[
						"mod",
						"mod\tmodule .. end"
					],
					[
						"we",
						"webhook\t(create_webhook_gql_mutation.rb)"
					],
					[
						"retur",
						"returned_error_message"
					],
					[
						"return",
						"returned_success"
					],
					[
						"webhook",
						"webhook_id"
					],
					[
						"parent",
						"parent_card_id"
					],
					[
						"child_card",
						"child_card_id"
					],
					[
						"chi",
						"child_card"
					],
					[
						"month",
						"month_ago\t(time_range.rb)"
					],
					[
						"sta",
						"start_form"
					],
					[
						"confir",
						"confirm_message"
					],
					[
						"put",
						"put_update"
					],
					[
						"tra",
						"transaction\t(phase.rb)"
					],
					[
						"pass",
						"password"
					],
					[
						"password",
						"password_confirmation\t(UserPasssword.jsx)"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "FORMAT: 1A\nHOST: https://app.pipefy.com\n\n# Pipefy API\n\nThis is Database's API documentation.\n\n[Here](http://docs.pipefy.apiary.io) you will find the guidelines for getting started with the API.\n\n## Table [/queries{?table}]\n\nGet a table by table id.\n\n**Request Body**\n\n```\n{\n  query: {\n    table(id: \"G16Za4kK\") {\n      authorization\n      create_record_button_label\n      description\n      icon\n      id\n      labels {\n        id\n      }\n      members {\n        role_name\n      }\n      my_permissions {\n        can_manage_record\n        can_manage_table\n      }\n      name\n      public\n      public_form\n      summary_attributes {\n        id\n      }\n      summary_options {\n        name\n      }\n      table_fields {\n        id\n      }\n      table_records {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      table_records_count\n      title_field {\n        id\n      }\n      url\n    }\n  }\n}\n```\n\n### table(id: \"TABLE_ID\") [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"{ table(id: \\\"G16Za4kK\\\") { authorization create_record_button_label description icon id labels { id } members { role_name user { id } } my_permissions { can_manage_record can_manage_table } name public public_form summary_attributes { id } summary_options { name } table_fields { id } table_records { edges { node { id } } } table_records_count title_field { id } url } }\"\n            }\n\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"table\": {\n                  \"authorization\": \"read\",\n                  \"create_record_button_label\": null,\n                  \"description\": \"\",\n                  \"icon\": \"badge\",\n                  \"id\": \"G16Za4kK\",\n                  \"labels\": [],\n                  \"members\": [\n                    {\n                      \"role_name\": \"admin\",\n                      \"user\": {\n                        \"id\": \"75210\"\n                      }\n                    }\n                  ],\n                  \"my_permissions\": {\n                    \"can_manage_record\": true,\n                    \"can_manage_table\": true\n                  },\n                  \"name\": \"Employees\",\n                  \"public\": true,\n                  \"public_form\": null,\n                  \"summary_attributes\": [\n                    {\n                      \"id\": \"3571185\"\n                    }\n                  ],\n                  \"summary_options\": [\n                    {\n                      \"name\": \"Start form\"\n                    }\n                  ],\n                  \"table_fields\": [\n                    {\n                      \"id\": \"name\"\n                    }\n                  ],\n                  \"table_records\": {\n                    \"edges\": [\n                      {\n                        \"node\": {\n                          \"id\": \"2193259\"\n                        }\n                      }\n                    ]\n                  },\n                  \"table_records_count\": 1,\n                  \"title_field\": {\n                    \"id\": \"name\"\n                  },\n                  \"url\": \"http://app.pipefy.com/database_v2/tables/xxxxxxxx-employees\"\n                }\n              }\n            }\n\n## Tables [/queries{?tables}]\n\nGet tables by table ids.\n\n**Request Body**\n\n```\n{\n  query: {\n    tables(ids: [\"G16Za4kK\"]) {\n      authorization\n      create_record_button_label\n      description\n      icon\n      id\n      labels {\n        id\n      }\n      members {\n        role_name\n      }\n      my_permissions {\n        can_manage_record\n        can_manage_table\n      }\n      name\n      public\n      public_form\n      summary_attributes {\n        id\n      }\n      summary_options {\n        name\n      }\n      table_fields {\n        id\n      }\n      table_records {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      table_records_count\n      title_field {\n        id\n      }\n      url\n    }\n  }\n}\n```\n\n### tables(ids: [TABLE_IDS]) [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"{ tables(ids: [\\\"G16Za4kK\\\"]) { authorization create_record_button_label description icon id labels { id } members { role_name user { id } } my_permissions { can_manage_record can_manage_table } name public public_form summary_attributes { id } summary_options { name } table_fields { id } table_records { edges { node { id } } } table_records_count title_field { id } url } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"tables\": [\n                  {\n                    \"authorization\": \"read\",\n                    \"create_record_button_label\": null,\n                    \"description\": \"\",\n                    \"icon\": \"badge\",\n                    \"id\": \"G16Za4kK\",\n                    \"labels\": [],\n                    \"members\": [\n                      {\n                        \"role_name\": \"admin\",\n                        \"user\": {\n                          \"id\": \"75210\"\n                        }\n                      }\n                    ],\n                    \"my_permissions\": {\n                      \"can_manage_record\": true,\n                      \"can_manage_table\": true\n                    },\n                    \"name\": \"Employees\",\n                    \"public\": true,\n                    \"public_form\": null,\n                    \"summary_attributes\": [\n                      {\n                        \"id\": \"3571185\"\n                      }\n                    ],\n                    \"summary_options\": [\n                      {\n                        \"name\": \"Start form\"\n                      }\n                    ],\n                    \"table_fields\": [\n                      {\n                        \"id\": \"name\"\n                      }\n                    ],\n                    \"table_records\": {\n                      \"edges\": [\n                        {\n                          \"node\": {\n                            \"id\": \"2193259\"\n                          }\n                        }\n                      ]\n                    },\n                    \"table_records_count\": 1,\n                    \"title_field\": {\n                      \"id\": \"name\"\n                    },\n                    \"url\": \"http://app.pipefy.com/database_v2/tables/G16Za4kK-employees\"\n                  }\n                ]\n              }\n            }\n\n## Create Table [/queries{?create_table}]\n\nMutation to create a table, in case of success a query is returned.\n\n**Request Body**\n\n```\nmutation {\n  createTable(\n    input: {\n      organization_id: 1\n      name: \"All fields\"\n      description: \"Client's company\"\n      public: true\n      authorization: write\n    }\n  ) {\n    table {\n      id\n      name\n      description\n      public\n      authorization\n    }\n  }\n}\n```\n\n### createTable(input: params) [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"mutation { createTable(input: { organization_id: 1 name: \\\"Table example\\\"description: \\\"Table that comtain some data\\\"public: true authorization: write }) { table { id name description public authorization } } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"createTable\": {\n                  \"table\": {\n                    \"id\": \"zCud6K1k\",\n                    \"name\": \"Table example\",\n                    \"description\": \"Table that comtain some data\",\n                    \"public\": true,\n                    \"authorization\": \"write\"\n                  }\n                }\n              }\n            }\n\n## Update Table [/queries{?update_table}]\n\nMutation to update a table, in case of success a query is returned.\n\n**Request Body**\n\n```\nmutation {\n  updateTable(\n    input: {\n      id: \"_8bnXwpA\"\n      name: \"Dogs\"\n      description: \"Dog's list\"\n      public: true,\n      authorization: write\n      icon: \"dog\"\n      create_record_button_label: \"Add dog\"\n      title_field_id: \"what\"\n      public_form: true\n      summary_attributes: [\"id\",\"created_at\"]\n    }\n  ) {\n    table {\n      id\n      name\n      description\n      public\n      authorization\n      icon\n      create_record_button_label\n      title_field_id\n      public_form\n      summary_attributes\n    }\n  }\n}\n```\n\n### createTable(input: params) [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"mutation { updateTable(input: { id: \\\"_8bnXwpA\\\"name: \\\"Dogs\\\"description: \\\"Dog's list\\\"public: true, authorization: write icon: \\\"dog\\\"create_record_button_label: \\\"Add dog\\\"title_field_id: \\\"what\\\"public_form: true summary_attributes: [\\\"id\\\",\\\"created_at\\\"] }) { table { id name description public authorization icon create_record_button_label title_field { id } public_form summary_attributes { id } } } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"updateTable\": {\n                  \"table\": {\n                    \"id\": \"_8bnXwpA\",\n                    \"name\": \"Dogs\",\n                    \"description\": \"Dog's list\",\n                    \"public\": true,\n                    \"authorization\": \"write\",\n                    \"icon\": \"dog\",\n                    \"create_record_button_label\": \"Add dog\",\n                    \"title_field\": {\n                      \"id\": \"what\"\n                    },\n                    \"public_form\": true,\n                    \"summary_attributes\": [\n                      {\n                        \"id\": \"created_at\"\n                      },\n                      {\n                        \"id\": \"id\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n\n## Table record [/queries{?table_record}]\n\nGet table record by table record id.\n\n**Request Body**\n\n```\n{\n  table_record(id: 2193284) {\n    assignees {\n      id\n      name\n    }\n    created_at\n    created_by {\n      id\n      name\n    }\n    due_date\n    finished_at\n    id\n    labels {\n      id\n      name\n    }\n    parent_relations {\n      name\n      source_type\n    }\n    record_fields {\n      array_value\n      date_value\n      datetime_value\n      filled_at\n      float_value\n      name\n      required\n      updated_at\n      value\n    }\n    summary {\n      title\n      value\n    }\n    table {\n      id\n    }\n    title\n    updated_at\n    url\n  }\n}\n```\n\n### table_record(id: TABLE_RECORD_ID) [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"{ table_record(id: 2193284) { assignees { id name } created_at created_by { id name } due_date finished_at id labels { id name } parent_relations { name source_type } record_fields { array_value date_value datetime_value filled_at float_value name required updated_at value } summary { title value } table { id } title updated_at url } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"table_record\": {\n                  \"assignees\": [\n                  ],\n                  \"created_at\": \"2017-05-30T17:15:15-03:00\",\n                  \"created_by\": {\n                    \"id\": \"33104\",\n                    \"name\": \"marcio.trindade\"\n                  },\n                  \"due_date\": null,\n                  \"finished_at\": null,\n                  \"id\": \"2193284\",\n                  \"labels\": [\n                  ],\n                  \"parent_relations\": [\n                    {\n                      \"name\": \"Employee\",\n                      \"source_type\": \"Field\"\n                    }\n                  ],\n                  \"record_fields\": [\n                    {\n                      \"array_value\": null,\n                      \"date_value\": null,\n                      \"datetime_value\": null,\n                      \"filled_at\": \"2017-05-30T17:15:15-03:00\",\n                      \"float_value\": null,\n                      \"name\": \"Name\",\n                      \"required\": true,\n                      \"updated_at\": \"2017-05-30T17:15:15-03:00\",\n                      \"value\": \"Daniel Pipefy\"\n                    },\n                    {\n                      \"array_value\": null,\n                      \"date_value\": null,\n                      \"datetime_value\": null,\n                      \"filled_at\": \"2017-05-30T17:15:15-03:00\",\n                      \"float_value\": null,\n                      \"name\": \"Email\",\n                      \"required\": true,\n                      \"updated_at\": \"2017-05-30T17:15:15-03:00\",\n                      \"value\": \"daniel.pipefy@example.com\"\n                    }\n                  ],\n                  \"summary\": [\n                    {\n                      \"title\": \"Email\",\n                      \"value\": \"daniel.pipefy@example.com\"\n                    }\n                  ],\n                  \"table\": {\n                    \"id\": \"G16Za4kK\"\n                  },\n                  \"title\": \"Daniel Pipefy\",\n                  \"updated_at\": \"2017-05-30T17:15:16-03:00\",\n                  \"url\": \"http://app.pipefy.com/database_v2/tables/G16Za4kK-employees/table_records/2193284\"\n                }\n              }\n            }\n\n## Table records [/queries{?table_records}]\n\nGet table records by table id with pagination.\n\n**Request Body**\n\n```\n{\n  table_records(first: 10, table_id: \"G16Za4kK\") {\n    edges {\n      cursor\n      node {\n        assignees {\n          id\n          name\n        }\n        created_at\n        created_by {\n          id\n          name\n        }\n        due_date\n        finished_at\n        id\n        labels {\n          id\n          name\n        }\n        parent_relations {\n          name\n          source_type\n        }\n        record_fields {\n          array_value\n          date_value\n          datetime_value\n          filled_at\n          float_value\n          name\n          required\n          updated_at\n          value\n        }\n        summary {\n          title\n          value\n        }\n        table {\n          id\n        }\n        title\n        updated_at\n        url\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n      hasPreviousPage\n      startCursor\n    }\n  }\n}\n```\n\n### table_records(table_id: \"TABLE_ID\") [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"{ table_records(first: 10, table_id: \\\"G16Za4kK\\\") { edges { cursor node { assignees { id name } created_at created_by { id name } due_date finished_at id labels { id name } parent_relations { name source_type } record_fields { array_value date_value datetime_value filled_at float_value name required updated_at value } summary { title value } table { id } title updated_at url } } pageInfo { endCursor hasNextPage hasPreviousPage startCursor } } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"table_records\": {\n                  \"edges\": [\n                    {\n                      \"cursor\": \"OQ==\",\n                      \"node\": {\n                        \"assignees\": [\n                        ],\n                        \"created_at\": \"2017-05-30T17:15:05-03:00\",\n                        \"created_by\": {\n                          \"id\": \"33104\",\n                          \"name\": \"marcio.trindade\"\n                        },\n                        \"due_date\": null,\n                        \"finished_at\": null,\n                        \"id\": \"2193280\",\n                        \"labels\": [\n                        ],\n                        \"parent_relations\": [\n                          {\n                            \"name\": \"Employee\",\n                            \"source_type\": \"Field\"\n                          }\n                        ],\n                        \"record_fields\": [\n                          {\n                            \"array_value\": null,\n                            \"date_value\": null,\n                            \"datetime_value\": null,\n                            \"filled_at\": \"2017-05-30T17:15:05-03:00\",\n                            \"float_value\": null,\n                            \"name\": \"Name\",\n                            \"required\": true,\n                            \"updated_at\": \"2017-05-30T17:15:05-03:00\",\n                            \"value\": \"Claudio Pipefy\"\n                          },\n                          {\n                            \"array_value\": null,\n                            \"date_value\": null,\n                            \"datetime_value\": null,\n                            \"filled_at\": \"2017-05-30T17:15:05-03:00\",\n                            \"float_value\": null,\n                            \"name\": \"Email\",\n                            \"required\": true,\n                            \"updated_at\": \"2017-05-30T17:15:05-03:00\",\n                            \"value\": \"claudio.pipefy@example.com\"\n                          }\n                        ],\n                        \"summary\": [\n                          {\n                            \"title\": \"Email\",\n                            \"value\": \"claudio.pipefy@example.com\"\n                          }\n                        ],\n                        \"table\": {\n                          \"id\": \"G16Za4kK\"\n                        },\n                        \"title\": \"Claudio Pipefy\",\n                        \"updated_at\": \"2017-05-30T17:15:05-03:00\",\n                        \"url\": \"http://app.pipefy.com/database_v2/tables/G16Za4kK-employees/table_records/2193280\"\n                      }\n                    },\n                    {\n                      \"cursor\": \"MTA=\",\n                      \"node\": {\n                        \"assignees\": [\n                        ],\n                        \"created_at\": \"2017-05-30T17:15:15-03:00\",\n                        \"created_by\": {\n                          \"id\": \"33104\",\n                          \"name\": \"marcio.trindade\"\n                        },\n                        \"due_date\": null,\n                        \"finished_at\": null,\n                        \"id\": \"2193284\",\n                        \"labels\": [\n                        ],\n                        \"parent_relations\": [\n                          {\n                            \"name\": \"Employee\",\n                            \"source_type\": \"Field\"\n                          }\n                        ],\n                        \"record_fields\": [\n                          {\n                            \"array_value\": null,\n                            \"date_value\": null,\n                            \"datetime_value\": null,\n                            \"filled_at\": \"2017-05-30T17:15:15-03:00\",\n                            \"float_value\": null,\n                            \"name\": \"Name\",\n                            \"required\": true,\n                            \"updated_at\": \"2017-05-30T17:15:15-03:00\",\n                            \"value\": \"Daniel Pipefy\"\n                          },\n                          {\n                            \"array_value\": null,\n                            \"date_value\": null,\n                            \"datetime_value\": null,\n                            \"filled_at\": \"2017-05-30T17:15:15-03:00\",\n                            \"float_value\": null,\n                            \"name\": \"Email\",\n                            \"required\": true,\n                            \"updated_at\": \"2017-05-30T17:15:15-03:00\",\n                            \"value\": \"daniel.pipefy@example.com\"\n                          }\n                        ],\n                        \"summary\": [\n                          {\n                            \"title\": \"Email\",\n                            \"value\": \"daniel.pipefy@example.com\"\n                          }\n                        ],\n                        \"table\": {\n                          \"id\": \"G16Za4kK\"\n                        },\n                        \"title\": \"Daniel Pipefy\",\n                        \"updated_at\": \"2017-05-30T17:15:16-03:00\",\n                        \"url\": \"http://app.pipefy.com/database_v2/tables/G16Za4kK-employees/table_records/2193284\"\n                      }\n                    }\n                  ],\n                  \"pageInfo\": {\n                    \"endCursor\": \"MTA=\",\n                    \"hasNextPage\": false,\n                    \"hasPreviousPage\": false,\n                    \"startCursor\": \"MQ==\"\n                  }\n                }\n              }\n            }\n",
					"settings":
					{
						"buffer_size": 20935,
						"line_ending": "Unix",
						"name": "Pipefy API"
					}
				},
				{
					"contents": "SELECT COUNT(repos.id)\nFROM repos\nINNER JOIN organizations ON repos.organization_id = organizations.id\nWHERE repos.deleted_at IS NULL\n  AND organizations.deleted_at IS NOT NULL;\n\nSELECT \"repos\".*\nFROM \"repos\"\nINNER JOIN \"organizations\" ON \"repos\".\"organization_id\" = \"organizations\".\"id\"\nWHERE \"repos\".\"type\" IN ('Pipe')\n  AND \"repos\".\"deleted_at\" IS NULL\n  AND (\"organizations\".\"deleted_at\" IS NOT NULL);\n\nSELECT COUNT(phases.id)\n  FROM phases\n  INNER JOIN repos ON phases.repo_id = repos.id WHERE phases.deleted_at IS NULL\n  AND repos.deleted_at IS NOT NULL;\n\nSELECT COUNT(cards.id)\nFROM cards\nWHERE cards.deleted_at > '2017-05-17';\n\nSELECT *\nFROM activities\nWHERE org_id = 64294\n  AND pipe_id = 205999\n  AND action = 'pipe.destroy' LIMIT 1;",
					"settings":
					{
						"buffer_size": 743,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Pipe.joins('INNER JOIN \"organizations\" ON \"repos\".\"organization_id\" = \"organizations\".\"id\"').where('\"organizations\".\"deleted_at\" IS NOT NULL').each do |pipe|\n  user = pipe.activities.\n  MultiTenant.current_user = user\n  Destroyer::PipeDestroyer.destroy!(pipe)\n  MultiTenant.current_user = nil\nend\n\nTable.joins('INNER JOIN \"organizations\" ON \"repos\".\"organization_id\" = \"organizations\".\"id\"').where('\"organizations\".\"deleted_at\" IS NOT NULL').each do |table|\n  org = Organization.deleted.find(table.organization_id)\n\n  if org.created_by_id\n    user = User.with_deleted.find(org.created_by_id)  \n    user = User.find 86017\n    MultiTenant.current_user = user\n    puts Destroyer::TableDestroyer.destroy!(table)\n    MultiTenant.current_user = nil\n  end\nend;nil\n\nPhase.joins('INNER JOIN \"repos\" ON \"phases\".\"repo_id\" = \"repos\".\"id\"').where('\"repos\".\"deleted_at\" IS NOT NULL').each do |phase|\n  repo = Repo.deleted.find(phase.pipe_id)\n  activity = repo.activities.find_by(key: ['pipe.destroy', 'table.destroy'])\n  user = activity&.owner\n\n  MultiTenant.current_user = user\n  puts Destroyer::PhaseDestroyer.destroy!(phase)\n  MultiTenant.current_user = nil\nend;nil\n\nPhaseJump.joins('INNER JOIN \"phases\" ON \"phase_jumps\".\"source_phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').count\nPhaseJump.joins('INNER JOIN \"phases\" ON \"phase_jumps\".\"target_phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').count\nPhaseJump.joins('INNER JOIN \"phases\" ON \"phase_jumps\".\"target_phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').each do |phase_jump|\n  phase = Phase.deleted.find(phase_jump.target_phase_id)\n  phase_jump.update(deleted_at: phase.deleted_at)\nend;nil\n\nPhaseTeamMembership.joins('INNER JOIN \"phases\" ON \"phase_team_memberships\".\"phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').count\nAutomatedMessage.joins('INNER JOIN \"automated_message_setups\" ON \"automated_messages\".\"automated_message_setup_id\" = \"automated_message_setups\".\"id\"').where('\"automated_message_setups\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nAutomatedMessageSetup.joins('INNER JOIN \"phases\" ON \"automated_message_setups\".\"phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nField.joins('INNER JOIN \"phases\" ON \"fields\".\"phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nCardPhaseDetail.joins('INNER JOIN \"phases\" ON \"card_phase_details\".\"phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nCardFieldValue.joins('INNER JOIN \"fields\" ON \"card_field_values\".\"field_id\" = \"fields\".\"id\"').where('\"fields\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nRepoSummarizedLayoutAttribute.joins('INNER JOIN \"fields\" ON \"repo_summarized_layout_attributes\".\"attribute_slug\" = \"fields\".\"id\"::text').where('\"fields\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\n\nChecklist.joins('INNER JOIN \"card_phase_details\" ON \"card_phase_details\".\"id\" = \"checklists\".\"card_phase_detail_id\"').where('\"card_phase_details\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nChecklistItem.joins('INNER JOIN \"checklists\" ON \"checklists\".\"id\" = \"checklist_items\".\"checklist_id\"').where('\"checklists\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\n\nComment.joins('INNER JOIN \"card_phase_details\" ON \"card_phase_details\".\"id\" = \"comments\".\"card_phase_detail_id\"').where('\"card_phase_details\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nCardFieldValue.joins('INNER JOIN \"card_phase_details\" ON \"card_phase_details\".\"id\" = \"card_field_values\".\"card_phase_detail_id\"').where('\"card_phase_details\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nCardPhaseDetailTimeEntry.joins('INNER JOIN \"card_phase_details\" ON \"card_phase_details\".\"id\" = \"card_phase_detail_time_entries\".\"card_phase_detail_id\"').where('\"card_phase_details\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\nAutomatedMessage.joins('INNER JOIN \"card_phase_details\" ON \"automated_messages\".\"automated_message_setup_id\" = \"card_phase_details\".\"id\"').where('\"card_phase_details\".\"deleted_at\" IS NOT NULL').update_all(deleted_at: Time.current)\n\nCard.joins('INNER JOIN \"phases\" ON \"cards\".\"current_phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').find_each do |card|\n\nCard.joins('INNER JOIN \"phases\" ON \"cards\".\"current_phase_id\" = \"phases\".\"id\"').where('\"phases\".\"deleted_at\" IS NOT NULL').find_each do |card|\n  card.update(deleted_at: Time.current)\n  Card.searchkick_index.remove(card)\nend\n\n\n\nCard.deleted.where('deleted_at > ?', 1.day.ago).find_each do |card|\n  puts card.id\n  Card.searchkick_index.remove(card)\nend;nil\n\n# 568006\n# 567712\n# 562886\n",
					"settings":
					{
						"buffer_size": 4847,
						"line_ending": "Unix"
					}
				},
				{
					"contents": "## Update Table [/queries{?update_table}]\n\nMutation to update a table, in case of success a query is returned.\n\n**Request Body**\n\n```\nmutation {\n  updateTable(\n    input: {\n      id: \"_8bnXwpA\"\n      name: \"Dogs\"\n      description: \"Dog's list\"\n      public: true,\n      authorization: write\n      icon: \"dog\"\n      create_record_button_label: \"Add dog\"\n      title_field_id: \"what\"\n      public_form: true\n      summary_attributes: [\"id\",\"created_at\"]\n    }\n  ) {\n    table {\n      id\n      name\n      description\n      public\n      authorization\n      icon\n      create_record_button_label\n      title_field_id\n      public_form\n      summary_attributes\n    }\n  }\n}\n```\n\n### createTable(input: params) [POST]\n\n+ Request (application/json)\n\n    + Headers\n\n            Authorization: Bearer your_personal_access_token\n\n\n    + Body\n\n            {\n              \"query\": \"mutation { updateTable(input: { id: \\\"_8bnXwpA\\\"name: \\\"Dogs\\\"description: \\\"Dog's list\\\"public: true, authorization: write icon: \\\"dog\\\"create_record_button_label: \\\"Add dog\\\"title_field_id: \\\"what\\\"public_form: true summary_attributes: [\\\"id\\\",\\\"created_at\\\"] }) { table { id name description public authorization icon create_record_button_label title_field { id } public_form summary_attributes { id } } } }\"\n            }\n\n\n+ Response 200 (application/json; charset=utf-8)\n\n    + Body\n\n            {\n              \"data\": {\n                \"updateTable\": {\n                  \"table\": {\n                    \"id\": \"_8bnXwpA\",\n                    \"name\": \"Dogs\",\n                    \"description\": \"Dog's list\",\n                    \"public\": true,\n                    \"authorization\": \"write\",\n                    \"icon\": \"dog\",\n                    \"create_record_button_label\": \"Add dog\",\n                    \"title_field\": {\n                      \"id\": \"what\"\n                    },\n                    \"public_form\": true,\n                    \"summary_attributes\": [\n                      {\n                        \"id\": \"created_at\"\n                      },\n                      {\n                        \"id\": \"id\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n",
					"settings":
					{
						"buffer_size": 2206,
						"line_ending": "Unix",
						"name": "Update Table [/queries{?update_table}]"
					}
				},
				{
					"contents": "deleteTable\n\ncreateTableField\nupdateTableField\ndeleteTableField\n\ncreateTableRecord\ndeleteTableRecord\nupdateTableRecord\n",
					"settings":
					{
						"buffer_size": 119,
						"line_ending": "Unix",
						"name": "deleteTable"
					}
				},
				{
					"file": "/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/new_database/tables_controller.rb",
					"settings":
					{
						"buffer_size": 1724,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"List",
							""
						],
						[
							"Rspec",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							"Clean"
						]
					],
					[
						"Rspec",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 375.0,
				"last_filter": "dele",
				"selected_items":
				[
					[
						"dele",
						"File: Delete"
					],
					[
						"copyre",
						"Copy Relative Path: Copy"
					],
					[
						"cop",
						"File: Copy Name Encoded"
					],
					[
						"gitsta",
						"git: status"
					],
					[
						"sql",
						"SQL Beautifier: Format Current SQL File"
					],
					[
						"json",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"mark",
						"Set Syntax: Markdown GFM"
					],
					[
						"gra",
						"Set Syntax: GraphQL"
					],
					[
						"git branc",
						"git: branch"
					],
					[
						"git sts",
						"git: status"
					],
					[
						"delete",
						"File: Delete"
					],
					[
						"copy",
						"Copy Relative Path: Copy"
					],
					[
						"duplicate",
						"File: Duplicate"
					],
					[
						"gitblam",
						"git: blame current file"
					],
					[
						"gitstatus",
						"git: status"
					],
					[
						"git blame",
						"git: blame current file"
					],
					[
						"duplica",
						"File: Duplicate"
					],
					[
						"copyrela",
						"Copy Relative Path: Copy"
					],
					[
						"git blam",
						"git: blame current file"
					],
					[
						"blame",
						"git: blame current file"
					],
					[
						"pull",
						"git: pull"
					],
					[
						"push",
						"git: push (force)"
					],
					[
						"git new",
						"git: checkout new branch"
					],
					[
						"reanme",
						"File: Rename"
					],
					[
						"rean",
						"File: Rename"
					],
					[
						"rename",
						"File: Rename"
					],
					[
						"rubocop",
						"RuboCop: Check current file"
					],
					[
						"git rebas",
						"git: rebase"
					],
					[
						"uniq",
						"Permute Lines: Unique"
					],
					[
						"git bran",
						"git: branch"
					],
					[
						"rspec",
						"Set Syntax: Better RSpec"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"jsoin",
						"Pretty JSON: Minify (compress) JSON"
					],
					[
						"xml",
						"Set Syntax: XML"
					],
					[
						"rubo",
						"RuboCop: Auto correct current file"
					],
					[
						"ruby",
						"Set Syntax: Ruby on Rails"
					],
					[
						"html",
						"Set Syntax: HTML"
					],
					[
						"move",
						"File: Move"
					],
					[
						"list",
						"Package Control: List Packages"
					],
					[
						"duplic",
						"File: Duplicate"
					],
					[
						"git",
						"Git: Status"
					],
					[
						"babel",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"copyr",
						"Copy Relative Path: Copy"
					],
					[
						"package",
						"Package Control: List Packages"
					],
					[
						"gitblame",
						"Git: Blame"
					],
					[
						"gits",
						"Git: Status"
					],
					[
						"git bla",
						"Git: Blame"
					],
					[
						"gitstat",
						"Git: Status"
					],
					[
						"blam",
						"Git: Blame"
					],
					[
						"dupli",
						"File: Duplicate"
					],
					[
						"copyrel",
						"Copy Relative Path: Copy"
					],
					[
						"rela",
						"Copy Relative Path: Copy"
					],
					[
						"copyrea",
						"Copy Relative Path: Copy"
					],
					[
						"csv",
						"CSV: Justify columns"
					],
					[
						"copyrelat",
						"Copy Relative Path: Copy"
					],
					[
						"gitblma",
						"Git: Blame"
					],
					[
						"rubop",
						"RuboCop: Check current project"
					],
					[
						"ru",
						"RuboCop: Check current file"
					],
					[
						"copyrelati",
						"Copy Relative Path: Copy"
					],
					[
						"markdon",
						"Set Syntax: Markdown GFM"
					],
					[
						"graph",
						"Set Syntax: GraphQL"
					],
					[
						"markdo",
						"Set Syntax: Markdown GFM"
					],
					[
						"copyrelae",
						"Copy Relative Path: Copy"
					],
					[
						"reame",
						"File: Rename"
					],
					[
						"gitblm",
						"Git: Blame"
					],
					[
						"dupl",
						"File: Duplicate"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"ruo",
						"RuboCop: Offense Count in current project"
					],
					[
						"title",
						"Convert Case: Title Case"
					],
					[
						"tit",
						"Convert Case: Title Case"
					],
					[
						"java",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"rudo",
						"RuboCop: Check folder of current file"
					],
					[
						"gi",
						"Git: Status"
					],
					[
						"gitst",
						"Git: Status"
					],
					[
						"upp",
						"Convert Case: Upper Case"
					],
					[
						"uni",
						"Permute Lines: Unique"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"case",
						"Convert Case: Lower Case"
					],
					[
						"unqi",
						"Permute Lines: Unique"
					],
					[
						"up",
						"Convert Case: Upper Case"
					],
					[
						"table ma",
						"Table Editor: Set table syntax 'MultiMarkdown' for current view"
					],
					[
						"un",
						"Permute Lines: Unique"
					],
					[
						"ma",
						"Set Syntax: Markdown GFM"
					],
					[
						"css",
						"Set Syntax: CSS"
					],
					[
						"delte",
						"File: Delete"
					],
					[
						"rudy",
						"RuboCop: Check folder of current file (only with lint cops)"
					],
					[
						"mov",
						"File: Move"
					],
					[
						"copypath",
						"File: Copy Path From Project"
					],
					[
						"git bl",
						"Git: Blame"
					],
					[
						"rena",
						"File: Rename"
					],
					[
						"cope",
						"File: Copy Name Encoded"
					],
					[
						"mar",
						"Set Syntax: Markdown GFM"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"eslint",
						"ESLint"
					],
					[
						"esli",
						"ESLint"
					],
					[
						"csv sort",
						"CSV: Sort by column (Ascending)"
					],
					[
						"markd",
						"Set Syntax: Markdown"
					],
					[
						"rei",
						"Indentation: Reindent Lines"
					],
					[
						"babe",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"bla",
						"Git: Blame"
					],
					[
						"dup",
						"File: Duplicate"
					],
					[
						"yml",
						"Set Syntax: YAML"
					],
					[
						"ever new",
						"Evernote: New empty note"
					],
					[
						"javas",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"bab",
						"Set Syntax: JavaScript (Babel)"
					],
					[
						"block",
						"Toggle Block Comment"
					],
					[
						"git st",
						"Git: Status"
					],
					[
						"select",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"erb",
						"Coffee: Quick Run Bar"
					],
					[
						"slim",
						"Set Syntax: Ruby Slim"
					],
					[
						"jslin",
						"JSLint"
					],
					[
						"inserc",
						"CSV: Insert column"
					],
					[
						"",
						"CSV: Insert column"
					],
					[
						"blma",
						"Git: Blame"
					],
					[
						"blmae",
						"Git: Blame"
					],
					[
						"jso",
						"Pretty JSON: Format (Pretty Print) JSON"
					],
					[
						"javasc",
						"Set Syntax: JavaScript"
					],
					[
						"josn",
						"Set Syntax: JSON"
					],
					[
						"y",
						"Set Syntax: YAML"
					],
					[
						"de",
						"File: Delete"
					],
					[
						"mo",
						"File: Move"
					],
					[
						"coffes",
						"Set Syntax: CoffeeScript"
					],
					[
						"js",
						"Set Syntax: JavaScript"
					],
					[
						"them",
						"ColorSchemeSelector: Select Color Scheme"
					],
					[
						"du",
						"File: Duplicate"
					],
					[
						"git diff",
						"Git: Diff Current File"
					],
					[
						"gitdif",
						"Git: Diff All Files"
					]
				],
				"width": 588.0
			},
			"console":
			{
				"height": 752.0,
				"history":
				[
					"help",
					"reload"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Users/marciotrindade/Projects/pipefy/pipefy",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/concerns",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/tables",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/types",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer"
			],
			"file_history":
			[
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/controllers/new_database/tables_controller_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer/organization_destroyer.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/destroyer/organization_destroyer_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card_phase_detail_time_entry.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer/card_phase_detail_destroyer.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer/phase_destroyer.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/workers/card_denormalizer_worker.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/phase_jump.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/automated_message_setup.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/field.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/repo_summarized_layout_attribute_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/repo_summarized_layout_attribute.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/phase_team_membership.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/database_table.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer/database_table_destroyer.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/destroyer/database_table_destroyer_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/new_database/tables_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/destroyer/pipe_destroyer.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/organization.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/card_value_change_handler.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/tables/create.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/mutations/tables/create_table_gql_mutation.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/types/mutation_gql_type.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/pages_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/routes.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/mutations/webhooks/update_webhook_gql_mutation.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.git/MERGE_MSG",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.env.local",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.git/COMMIT_EDITMSG",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/helpers/application_helper.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/layouts/_header.html.erb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/billing_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/features/over_quota_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/layouts/application.html.erb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/layouts/pipestyle.html.erb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Gemfile.lock",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Gemfile",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/search_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/organizations_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/notifications_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/my_desk_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/shared/_billing_modal.html.erb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts/BillingAlert.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/views/my_desk/_header.html.erb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts/v3/init.js.coffee",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts/v2/init.js.coffee",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/card_mover_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card_field_value_validator.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/services/webhooks/notifier_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/webhooks/notifier.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/card_mover.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_create_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_done_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_expired_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_late_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_move_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_move.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/actions.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/webhooks/card_overdue_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_base.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/cards_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_publisher.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/subscriptions_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/lib/multi_tenant/store_from_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/application_controller.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/activity_service.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/node_modules/lodash/multiply.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/workers/webhooks/worker.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/workers/webhooks/record_worker.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_done.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_create.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_expired.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_late.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhooks/card_overdue.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/cards.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/fixtures/phases.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/members/invite_members.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/webhook.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/abilities/pipe_roles.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/sidekiq.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Procfile",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/newrelic.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/field_types/connector_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models/field_types/database_link_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/initializers/rack-attack.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/field_type/connector.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/field_type/database_link.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/concerns/create_repo.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/table_records/search.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/pipe/StartFormFields.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/pipe/StartForm.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.env",
				"/Users/marciotrindade/.rvm/gems/ruby-2.3.3/gems/omniauth-1.3.2/lib/omniauth/auth_hash.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/initializers/doorkeeper.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/services/card_field_value_mass_updater.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/initializers/nazar.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/shards.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/config/database.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/abilities/table_roles.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/resolvers/concerns/search.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/graphql/types/query_gql_type.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/webpack.config.test.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/webpack.config.prod.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/webpack.config.dev.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/entry.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/module.prod.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/module.test.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/output.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/resolve.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/module.dev.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/config/babel.dev.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Dockerfile-nodejs",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.travis.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/docker-compose.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/Dokerimage-node",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/remote_search/RemoteTableRecordSearch.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views/remote_search/RemoteCardSearch.jsx",
				"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/react-pipestyle/index.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/pipestyle.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/app/models/card_field_value.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.rubocop.yml",
				"/Users/marciotrindade/Projects/pipefy/pipefy/.git/rebase-merge/git-rebase-todo",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/previous_phase_fields_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/pipe_relations_interactions_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec/javascripts/views/open_card/RemoteCardSearch_spec.js",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card/edit_field_modals/editing_every_field_type_in_modals_spec.rb",
				"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/support/shared_examples/edit_field_type_in_a_modal.rb"
			],
			"find":
			{
				"height": 39.0
			},
			"find_in_files":
			{
				"height": 98.0,
				"where_history":
				[
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src",
					"",
					"spec",
					"app",
					"app/javascript",
					"react_components/",
					"app/",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts/databaseV2/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts/databaseV2/,-*.gql",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts/databaseV2/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts/databaseV2/components",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/javascripts",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/views",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/views",
					"",
					"spec/feature",
					"app/graphql",
					"spec/graphql",
					"app/graphql",
					"",
					"graphql",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec/javascripts",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src",
					"",
					"react_components/",
					"spec_features/",
					"spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/views",
					"",
					"react_components/src/",
					"spec_features/",
					"react_components/",
					"spec/javascritps/",
					"react_components/",
					"react_components",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features/open_card",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec/models",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/react_components/src/views",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/stylesheets/v3",
					"/Users/marciotrindade/Projects/pipefy/pipefy/config/locales",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/app/assets/javascripts",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/Projects/pipefy/pipefy/db",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features",
					"",
					"/Users/marciotrindade/pipefy/pipefy/db",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/models/abilities",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features/features",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/views/database",
					"/Users/marciotrindade/pipefy/pipefy/app/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/react_components",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3",
					"/Users/marciotrindade/pipefy/pipefy/spec/javascripts",
					"",
					"/Users/marciotrindade/pipefy/pipefy/react_components",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/stores",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/dispatchers",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/actions",
					"/Users/marciotrindade/pipefy/pipefy/react_components/src/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3/components/stores",
					"",
					"/Users/marciotrindade/pipefy/pipefy/spec_features/features",
					"/Users/marciotrindade/pipefy/pipefy/spec/features",
					"",
					"/Users/marciotrindade/codebits/vcamp/app/views/admin",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/views",
					"",
					"/Users/marciotrindade/pipefy/pipefy/app/assets/javascripts/v3"
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"automated_message_setups",
					"card_phase_details",
					"fields",
					"repo_summarized_layout_attributes",
					"fields",
					"phases",
					"phase_jump",
					"#<Table id",
					"DatabaseTableDestroyer",
					", #",
					"table",
					"MultiTenant",
					"organizations",
					"repos",
					"{",
					"\\n",
					", ",
					"\\n",
					"{",
					"\\n",
					"$authorization",
					"=>",
					"organization",
					"You have exceeded the free plan quota.",
					"def display_billing_notice_period?",
					"pipestyle",
					"js-billing-trigger",
					"pp-freemium-modal",
					"js-pp-trial",
					"js-trial",
					"BillingAlert",
					"js-trial",
					"to_json",
					"as_json",
					"to_json",
					"Webhooks::Actions",
					"send_move_notifications!",
					"@user",
					"public_form",
					"pipebot",
					"publicform",
					"CardMover",
					"MultiTenant",
					"send_move_notifications!",
					"phase2",
					"phase1",
					"constantize",
					"send_move_notifications",
					"web",
					"Report",
					"safe_user_agents",
					"safe_ips",
					"blocked_ips",
					"blacklist",
					"()",
					"first",
					"StartFormFields",
					"WHITE",
					".value -> 'value'",
					"pipestyle_versioned_libs",
					"\\\"",
					"\"",
					"{",
					"\\\"",
					"\"",
					"slave1",
					"self.",
					"pipefy.com",
					"cunha",
					"Cunha",
					"{",
					"\\n",
					"cunha",
					"{",
					"\\n",
					"\\s\\s",
					"  ",
					"\\n",
					"output",
					"entry",
					"react-pipestyle",
					"onClose",
					"Style/BlockDelimiters",
					".pp-labels",
					"pp-item-list",
					"click_new_card_button",
					"close",
					"pp-drop-drown",
					"pry",
					"#menu-field-#{field.id}",
					"@organization",
					"organization_users",
					".pp-drop-down .pp-item-list",
					".rb",
					"\u001b[31mrspec",
					"create_on_draft",
					"create_on_start_phase",
					"common_attributes",
					"G16Za4kK",
					"{",
					"\\n",
					"account_code",
					"was_dunning",
					"\", \"",
					"},",
					"_renderCreateButton",
					"eslint-disable",
					"Dropdown",
					"toggleIdSelected",
					"_addAssignee",
					"-1360",
					"_renderCreateButton",
					"_renderFakeDueDateField",
					"_renderFakeFields",
					"_renderStartFormActionButtons",
					"_renderFakeFields",
					"_renderFakeLabelSelectField",
					"OpenCardHeaderLabelSelect",
					"_renderCreateButton",
					"graph",
					"filterable",
					"_renderCreateButton",
					"pp-drop-down",
					", ",
					"export",
					"\"",
					"pipes",
					"card_created_attrs"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					" ",
					"tableId",
					"'api.errors.general.invalid_input', field: $1, value:$2)",
					"'api.errors.general.invalid_input', field: $1, input_value: $2)",
					"errors.general.permission_denied",
					"$2",
					".pp-header .pp-nav-center",
					"$1: ",
					"require_relative '../",
					"",
					"$3",
					"\\n",
					" ",
					"to have_no",
					":card_title=>\"\"",
					"\"card_title\"=>\"\"",
					"staging-www",
					"if (",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $3 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $ AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $2 AND card_phase_detail_id = $3 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"DELETE from card_field_values where id = (select id from card_field_values WHERE field_id = $1 AND card_phase_detail_id = $2 AND deleted_at IS NULL ORDER BY updated_at ASC LIMIT 1);",
					"require 'features_helper'",
					"$2 - $1",
					"users(:pipe_org_admin)",
					"pending",
					"$2",
					"render ",
					":$1",
					"product_properties_check('$1', $2, dynamic: true)",
					"product_properties_radio('$1', $2, default: true)",
					"product_properties_check('$1', $2, default: true)",
					"$1",
					"{{ server_hostname }}",
					"current_site",
					"ApiClient",
					"",
					"set_flash",
					"$3",
					"$1;",
					"$2",
					"",
					", ",
					"{account_id: $1, message_id: $2, batch: $3},",
					"",
					"$2,$1,hm8307\\n",
					"$2,$1,hm8307",
					"{account_id: $1, message_id: $2},",
					"$2,$1,hm1720\\n",
					"$2,$1,hm950\\n",
					"$2,$1,hm950",
					"$2,$1,hm638",
					"\\n",
					"\"",
					"\"\\n\"",
					"'\\n'",
					"$1",
					"\\n",
					"be_falsey",
					"be_truthy",
					"be_falsey",
					"be_truthy",
					"ls-label",
					"ls-label-text",
					"{\"$3\" => \"$1\"},",
					"{\"$3}\" => \"$1\"},",
					"\\n",
					"",
					"\\n",
					"",
					"\\n",
					"",
					"$1, $3, $5",
					"Host.find_by_ip(\"$2\").update_attribute(:name, \"$3\")",
					"$2,$3,$1",
					",\\n",
					"$1",
					",\\n",
					",",
					",\\n",
					"$2",
					"",
					"\\n",
					"",
					"\"$1\",",
					"$1",
					"\",\\n\"",
					",\\n",
					"$1"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Users/marciotrindade/Projects/pipefy/pipefy"
				}
			],
			"groups":
			[
				{
					"selected": 4,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 20935,
								"regions":
								{
								},
								"selection":
								[
									[
										8035,
										8035
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"default_dir": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 7728.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 743,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"default_dir": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"syntax": "Packages/SQL/SQL.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 4847,
								"regions":
								{
								},
								"selection":
								[
									[
										4847,
										4847
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"default_dir": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"syntax": "Packages/Rails/Ruby on Rails.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 3,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2206,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										2206
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"default_dir": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 4,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 119,
								"regions":
								{
								},
								"selection":
								[
									[
										119,
										119
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"auto_name": "deleteTable",
									"default_dir": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/new_database/tables_controller.rb",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1724,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"apply_syntax_touched": true,
									"git_savvy.file_path": "/Users/marciotrindade/Projects/pipefy/pipefy/app/controllers/new_database/tables_controller.rb",
									"git_savvy.repo_path": "/Users/marciotrindade/Projects/pipefy/pipefy",
									"side_bar_folders_auto_load_folder": 1,
									"syntax": "Packages/Rails/Ruby on Rails.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 382.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 29.0
			},
			"input":
			{
				"height": 38.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.9o:///Users/marciotrindade/locaweb/emkt-bounces/app/workers":
			{
				"height": 112.0
			},
			"output.9o:///Users/marciotrindade/locaweb/emkt-provisioner/spec/lib":
			{
				"height": 112.0
			},
			"output.GitSavvy":
			{
				"height": 138.0
			},
			"output.GoSublime-output":
			{
				"height": 100.0
			},
			"output.MarGo-output":
			{
				"height": 100.0
			},
			"output.doc":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 406.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.git-commit":
			{
				"height": 132.0
			},
			"output.git-push":
			{
				"height": 132.0
			},
			"output.show_commit_info":
			{
				"height": 138.0
			},
			"pinned_build_system": "Packages/User/Bash.sublime-build",
			"position": "0 0 0 1436 878 0 0 1440 878 ",
			"project": "",
			"replace":
			{
				"height": 54.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"time_entry",
						"app/models/card_phase_detail_time_entry.rb"
					],
					[
						"phase_detaildestr",
						"app/services/destroyer/card_phase_detail_destroyer.rb"
					],
					[
						"field",
						"app/models/field.rb"
					],
					[
						"repo_summarized_layout_attributes",
						"spec/models/repo_summarized_layout_attribute_spec.rb"
					],
					[
						"automatedmessagesetup",
						"app/models/automated_message_setup.rb"
					],
					[
						"phaseteam",
						"app/models/phase_team_membership.rb"
					],
					[
						"phasejump",
						"app/models/phase_jump.rb"
					],
					[
						"phasedestroyer",
						"app/services/destroyer/phase_destroyer.rb"
					],
					[
						"card",
						"app/models/card.rb"
					],
					[
						"carddenor",
						"app/workers/card_denormalizer_worker.rb"
					],
					[
						"databasetable",
						"app/models/database_table.rb"
					],
					[
						"databasetabledestroy",
						"app/services/destroyer/database_table_destroyer.rb"
					],
					[
						"o",
						"app/models/organization.rb"
					],
					[
						"pipedestroyer",
						"app/services/destroyer/pipe_destroyer.rb"
					],
					[
						"resolverstablescreate",
						"app/graphql/resolvers/tables/create.rb"
					],
					[
						"createtablegqlmutation",
						"app/graphql/mutations/tables/create_table_gql_mutation.rb"
					],
					[
						"mutation",
						"app/graphql/types/mutation_gql_type.rb"
					],
					[
						"updatewebhookgqlmutation",
						"app/graphql/mutations/webhooks/update_webhook_gql_mutation.rb"
					],
					[
						"route",
						"config/routes.rb"
					],
					[
						"app/views/layouts/pipestyle.html.erb",
						"app/views/layouts/pipestyle.html.erb"
					],
					[
						"organizaiton",
						"app/models/organization.rb"
					],
					[
						"_header",
						"app/views/layouts/_header.html.erb"
					],
					[
						"gem",
						"Gemfile.lock"
					],
					[
						"applicationhtmlerb",
						"app/views/layouts/application.html.erb"
					],
					[
						"header",
						"app/views/my_desk/_header.html.erb"
					],
					[
						"shared/billing_modal",
						"app/views/shared/_billing_modal.html.erb"
					],
					[
						"application.html.erb",
						"app/views/layouts/application.html.erb"
					],
					[
						"app/assets/javascripts/v3/init.js.coffee",
						"app/assets/javascripts/v3/init.js.coffee"
					],
					[
						"initjscoffee",
						"app/assets/javascripts/v2/init.js.coffee"
					],
					[
						"spec/services/card_mover_spec.rb",
						"spec/services/card_mover_spec.rb"
					],
					[
						"app/models/card_field_value_validator.rb",
						"app/models/card_field_value_validator.rb"
					],
					[
						"spec/services/webhooks/notifier_spec.rb",
						"spec/services/webhooks/notifier_spec.rb"
					],
					[
						"multi_tenant/store_from_controller",
						"lib/multi_tenant/store_from_controller.rb"
					],
					[
						"cardmover",
						"app/services/card_mover.rb"
					],
					[
						"applicationcontroller",
						"app/controllers/application_controller.rb"
					],
					[
						"multi",
						"node_modules/lodash/multiply.js"
					],
					[
						"activityservice",
						"app/services/activity_service.rb"
					],
					[
						"activitypublisher",
						"app/services/activity_publisher.rb"
					],
					[
						"cardsyml",
						"spec/fixtures/cards.yml"
					],
					[
						"phases",
						"spec/fixtures/phases.yml"
					],
					[
						"cardrb",
						"app/models/card.rb"
					],
					[
						"web",
						"app/models/webhook.rb"
					],
					[
						"piperoles",
						"app/models/abilities/pipe_roles.rb"
					],
					[
						"sidekiq",
						"config/sidekiq.yml"
					],
					[
						"pro",
						"Procfile"
					],
					[
						"spec/models/field_types/connector_spec.rb",
						"spec/models/field_types/connector_spec.rb"
					],
					[
						"rac",
						"config/initializers/rack-attack.rb"
					],
					[
						"app/models/field_type/database_link.rb",
						"app/models/field_type/database_link.rb"
					],
					[
						"startformfields",
						"react_components/src/views/pipe/StartFormFields.jsx"
					],
					[
						".en",
						".env"
					],
					[
						"rackatta",
						"config/initializers/rack-attack.rb"
					],
					[
						"gemfile",
						"Gemfile.lock"
					],
					[
						"door",
						"config/initializers/doorkeeper.rb"
					],
					[
						"routes",
						"config/routes.rb"
					],
					[
						"cardfieldvaluemassupdater",
						"app/services/card_field_value_mass_updater.rb"
					],
					[
						"database",
						"config/database.yml"
					],
					[
						"query",
						"app/graphql/types/query_gql_type.rb"
					],
					[
						"concernssearch",
						"app/graphql/resolvers/concerns/search.rb"
					],
					[
						"resolverstablerecordssearch",
						"app/graphql/resolvers/table_records/search.rb"
					],
					[
						"travis",
						".travis.yml"
					],
					[
						"docker",
						"docker-compose.yml"
					],
					[
						"dockerfile-nodejs",
						"Dockerfile-nodejs"
					],
					[
						"doker",
						"docker-compose.yml"
					],
					[
						".travi",
						".travis.yml"
					],
					[
						"react_components/src/views/remote_search/remotetablerecordsearch.jsx",
						"react_components/src/views/remote_search/RemoteTableRecordSearch.jsx"
					],
					[
						"react_components/src/views/remote_search/remotecardsearch.jsx",
						"react_components/src/views/remote_search/RemoteCardSearch.jsx"
					],
					[
						"react_components/src/react-pipestyle/index.js",
						"react_components/src/react-pipestyle/index.js"
					],
					[
						"app/models/pipestyle.rb",
						"app/models/pipestyle.rb"
					],
					[
						"rubocop",
						".rubocop.yml"
					],
					[
						"app/models/card_field_value.rb",
						"app/models/card_field_value.rb"
					],
					[
						"app/services/destroyer/phase_destroyer.rb",
						"app/services/destroyer/phase_destroyer.rb"
					],
					[
						"remotecardsearch",
						"react_components/src/views/remote_search/RemoteCardSearch.jsx"
					],
					[
						"remote",
						"spec/javascripts/views/open_card/RemoteCardSearch_spec.js"
					],
					[
						"spec_features/open_card/edit_field_modals/editing_every_field_type_in_modals_spec.rb",
						"spec_features/open_card/edit_field_modals/editing_every_field_type_in_modals_spec.rb"
					],
					[
						"fieldtypelabelselect",
						"react_components/src/views/field_types/FieldTypeLabelSelect.jsx"
					],
					[
						"recurlycon",
						"app/controllers/recurly_controller.rb"
					],
					[
						"spec_features/support/shared_examples/field_connector.rb",
						"spec_features/support/shared_examples/field_connector.rb"
					],
					[
						"spec_features/open_card/card_assignees_spec.rb",
						"spec_features/open_card/card_assignees_spec.rb"
					],
					[
						"organization",
						"app/models/organization.rb"
					],
					[
						"checkout",
						"app/views/layouts/checkout.html.erb"
					],
					[
						"dropdownindex",
						"react_components/src/react-pipestyle/Dropdown/index.jsx"
					],
					[
						"recurlycontroller",
						"app/controllers/recurly_controller.rb"
					],
					[
						"fieldvalue",
						"app/models/card_field_value.rb"
					],
					[
						"databaserecord",
						"app/models/database_record.rb"
					],
					[
						"card.rb",
						"app/models/card.rb"
					],
					[
						"recurly",
						"config/initializers/recurly.rb"
					],
					[
						"rack",
						"config/initializers/rack-attack.rb"
					],
					[
						"subscript",
						"app/models/subscription.rb"
					],
					[
						"resourceprovidernotific",
						"app/services/resource_provider/notifications.rb"
					],
					[
						"notificationscontroller",
						"app/controllers/notifications_controller.rb"
					],
					[
						"views/mixins/filterableselectmixin",
						"react_components/src/views/mixins/FilterableSelectMixin.jsx"
					],
					[
						"views/userselect",
						"react_components/src/views/UserSelect.jsx"
					],
					[
						"fieldvalueinputgqltype",
						"app/graphql/types/inputs/field_value_input_gql_type.rb"
					],
					[
						"createcardgqlmutation",
						"app/graphql/mutations/cards/create_card_gql_mutation.rb"
					],
					[
						"pipestyle",
						"app/models/pipestyle.rb"
					],
					[
						"app/javascripts/databasev2/components/opentablerecord/options/dropdown.jsx",
						"app/javascripts/databaseV2/components/OpenTableRecord/Options/Dropdown.jsx"
					],
					[
						"app/javascripts/databasev2/components/tableshow/columnsfilter.jsx",
						"app/javascripts/databaseV2/components/TableShow/ColumnsFilter.jsx"
					],
					[
						"mainjs",
						"node_modules/os-browserify/main.js"
					],
					[
						"databasev2/components/fieldtypes/edit/assigneeselectfield/createbutton",
						"app/javascripts/databaseV2/components/FieldTypes/Edit/AssigneeSelectField/CreateButton.jsx"
					],
					[
						"notificator",
						"app/services/notificator.rb"
					],
					[
						"createnotificationworker",
						"app/workers/create_notification_worker.rb"
					],
					[
						"reposuma",
						"spec/factories/repo_summarized_layout_attribute_factory.rb"
					],
					[
						"phasedetailsyml",
						"spec/fixtures/card_phase_details.yml"
					],
					[
						"checklistrb",
						"app/models/checklist.rb"
					],
					[
						"checklist",
						"app/models/checklist_item.rb"
					],
					[
						"automatedmessagefacoty",
						"spec/factories/automated_message_factory.rb"
					],
					[
						"automatedmessagesetupfac",
						"spec/factories/automated_messages_setup_factory.rb"
					],
					[
						"timeentryfac",
						"spec/factories/card_phase_detail_time_entry_factory.rb"
					],
					[
						"phasesyml",
						"spec/fixtures/phases.yml"
					],
					[
						"fieldvaluefac",
						"spec/factories/card_field_value_factory.rb"
					],
					[
						"commentfactory",
						"spec/factories/comment_factory.rb"
					],
					[
						"autom",
						"app/models/automated_message.rb"
					],
					[
						"card_phase_details",
						"spec/fixtures/card_phase_details.yml"
					],
					[
						"phase",
						"app/models/phase.rb"
					],
					[
						"cardphasedetailsyml",
						"spec/fixtures/card_phase_details.yml"
					],
					[
						"cardphasedetails",
						"spec/fixtures/card_phase_details.yml"
					],
					[
						"reposu",
						"app/models/repo_summarized_layout_attribute.rb"
					],
					[
						"automa",
						"app/models/automated_message.rb"
					],
					[
						"cardtimeentryrb",
						"app/models/card_phase_detail_time_entry.rb"
					],
					[
						"cardfieldvalue",
						"app/models/card_field_value.rb"
					],
					[
						"comment",
						"app/models/comment.rb"
					],
					[
						"checklistitem",
						"app/models/checklist_item.rb"
					],
					[
						"fieldrb",
						"app/models/field.rb"
					],
					[
						"automatedmessagesetu",
						"app/models/automated_message_setup.rb"
					],
					[
						"cardlabel",
						"app/models/card_label.rb"
					],
					[
						"inboxemail",
						"app/models/inbox_email.rb"
					],
					[
						"emailinbox",
						"app/models/email_inbox.rb"
					],
					[
						"cardrelation",
						"app/models/card_relation.rb"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 500.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"~/Dropbox/sublime_projects/codigos.sublime-project"
					]
				],
				"width": 380.0
			},
			"select_symbol":
			{
				"height": 354.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"2.1",
						"$(TIMESTAMP_DIR)/.RUBYARCHDIR.-.hitimes.-.2.1.time:"
					]
				],
				"width": 374.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 271.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 3232,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/Users/marciotrindade/Dropbox/sublime_projects/backup-de-sites.sublime-workspace",
			"/Users/marciotrindade/Dropbox/sublime_projects/codigos.sublime-workspace"
		]
	}
}
