[
  // Marcio Trindade
  { "keys": ["ctrl+alt+/"],       "command": "insert_snippet", "args": {"contents": "#{${1:$TM_SELECTED_TEXT}}"}},
  { "keys": ["ctrl+alt+super+d"], "command": "toggle_side_bar" },
  { "keys": ["ctrl+alt+u"],       "command": "title_case" },
  { "keys": ["ctrl+l"],           "command": "run_macro_file", "args": {"file": "Packages/User/Rocket.sublime-macro"} },
  { "keys": ["ctrl+p"],           "command": "run_macro_file", "args": {"file": "Packages/User/Params.sublime-macro"} },
  { "keys": ["ctrl+shift+d"],     "command": "duplicate_line" },
  { "keys": ["ctrl+shift+f"],     "command": "reindent", "args": {"single_line": false} },
  { "keys": ["super+shift+\\"],   "command": "reveal_in_side_bar"},
  { "keys": ["ctrl+shift+u"],     "command": "lower_case" },
  { "keys": ["ctrl+u"],           "command": "upper_case" },
  { "keys": ["ctrl+w"],           "command": "expand_selection", "args": {"to": "word"} },
  { "keys": ["ctrl+alt+r"],       "command": "rails_go_to_spec" },
  { "keys": ["super+alt+down"],   "command": "next_view_in_stack" },
  { "keys": ["super+alt+left"],   "command": "focus_group", "args": { "group": 0 } },
  { "keys": ["super+alt+right"],  "command": "focus_group", "args": { "group": 1 } },
  { "keys": ["super+alt+up"],     "command": "prev_view_in_stack" },
  { "keys": ["super+ctrl+/"],     "command": "alignment" },
  { "keys": ["super+shift+7"],    "command": "encode_html_entities" },
  { "keys": ["super+ctrl+v"],    "command": "paste" },
  { "keys": ["super+v"],          "command": "paste_and_indent" },
  { "keys": ["super+shift+ctrl+f"], "command": "search_in_project" },
  {
    "keys": ["alt+1"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1]]
    }
  },
  {
    "keys": ["alt+2"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 0.5, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
    }
  },
  // erb tags
  { "keys": ["ctrl+shift+."], "command": "erb" },
  // code fold
  { "keys": ["super+alt+1"], "command": "fold_by_level", "args": {"level": 1} },
  { "keys": ["super+alt+2"], "command": "fold_by_level", "args": {"level": 2} },
  { "keys": ["super+alt+3"], "command": "fold_by_level", "args": {"level": 3} },
  { "keys": ["super+alt+4"], "command": "fold_by_level", "args": {"level": 4} },
  { "keys": ["super+alt+5"], "command": "fold_by_level", "args": {"level": 5} },
  { "keys": ["super+alt+6"], "command": "fold_by_level", "args": {"level": 6} },
  { "keys": ["super+alt+7"], "command": "fold_by_level", "args": {"level": 7} },
  { "keys": ["super+alt+8"], "command": "fold_by_level", "args": {"level": 8} },
  { "keys": ["super+alt+9"], "command": "fold_by_level", "args": {"level": 9} },
  { "keys": ["super+alt+0"], "command": "unfold_all" },

  // everntoe
  { "keys": ["super+s"], "command": "save_evernote_note", "context": [{"key": "evernote_note"}, {"key": "evernote_has_guid"}] },
  { "keys": ["super+s"], "command": "send_to_evernote", "context": [{"key": "evernote_note"}, {"key": "evernote_has_guid", "operator": "equal", "operand": false}] }
]
